# coding: utf-8
# Test for model
require 'minitest/autorun'
require_relative 'model'

class TestModel < Minitest::Unit::TestCase
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Model.new end
  def test_control_d17; assert_in_epsilon(3.0, worksheet.control_d17, 0.002); end
  def test_control_d18; assert_in_epsilon(1.5, worksheet.control_d18, 0.002); end
  def test_control_d19; assert_in_epsilon(1.5, worksheet.control_d19, 0.002); end
  def test_control_d20; assert_in_epsilon(2.0, worksheet.control_d20, 0.002); end
  def test_control_d21; assert_in_epsilon(2.0, worksheet.control_d21, 0.002); end
  def test_control_d22; assert_in_epsilon(1.5, worksheet.control_d22, 0.002); end
  def test_control_d23; assert_in_epsilon(2.0, worksheet.control_d23, 0.002); end
  def test_control_d24; assert_in_epsilon(3.0, worksheet.control_d24, 0.002); end
  def test_control_d26; assert_in_epsilon(2.0, worksheet.control_d26, 0.002); end
  def test_control_d27; assert_in_epsilon(2.0, worksheet.control_d27, 0.002); end
  def test_control_d28; assert_in_epsilon(2.0, worksheet.control_d28, 0.002); end
  def test_control_d29; assert_in_epsilon(3.0, worksheet.control_d29, 0.002); end
  def test_control_d30; assert_in_epsilon(2.0, worksheet.control_d30, 0.002); end
  def test_control_d31; assert_in_epsilon(2.0, worksheet.control_d31, 0.002); end
  def test_control_d32; assert_in_epsilon(2.0, worksheet.control_d32, 0.002); end
  def test_control_d33; assert_in_epsilon(3.0, worksheet.control_d33, 0.002); end
  def test_control_d34; assert_in_epsilon(2.0, worksheet.control_d34, 0.002); end
  def test_control_d35; assert_in_epsilon(2.0, worksheet.control_d35, 0.002); end
  def test_control_d36; assert_in_epsilon(2.0, worksheet.control_d36, 0.002); end
  def test_control_d37; assert_in_epsilon(2.0, worksheet.control_d37, 0.002); end
  def test_control_d39; assert_in_epsilon(2.0, worksheet.control_d39, 0.002); end
  def test_control_d40; assert_in_delta(1.0, worksheet.control_d40, 0.002); end
  def test_control_d41; assert_in_delta(1.0, worksheet.control_d41, 0.002); end
  def test_control_d42; assert_in_delta(1.0, worksheet.control_d42, 0.002); end
  def test_control_d43; assert_in_epsilon(2.0, worksheet.control_d43, 0.002); end
  def test_control_d45; assert_in_epsilon(2.0, worksheet.control_d45, 0.002); end
  def test_control_d46; assert_in_epsilon(2.0, worksheet.control_d46, 0.002); end
  def test_control_d47; assert_in_epsilon(3.0, worksheet.control_d47, 0.002); end
  def test_control_d48; assert_in_epsilon(2.0, worksheet.control_d48, 0.002); end
  def test_control_d49; assert_in_epsilon(2.0, worksheet.control_d49, 0.002); end
  def test_control_d50; assert_in_epsilon(2.0, worksheet.control_d50, 0.002); end
  def test_control_d51; assert_in_epsilon(2.0, worksheet.control_d51, 0.002); end
  def test_control_d52; assert_in_epsilon(2.0, worksheet.control_d52, 0.002); end
  def test_control_d54; assert_in_epsilon(2.0, worksheet.control_d54, 0.002); end
  def test_control_d55; assert_in_epsilon(3.0, worksheet.control_d55, 0.002); end
  def test_control_d56; assert_in_epsilon(2.0, worksheet.control_d56, 0.002); end
  def test_control_d57; assert_in_epsilon(2.0, worksheet.control_d57, 0.002); end
  def test_control_d58; assert_in_epsilon(2.0, worksheet.control_d58, 0.002); end
  def test_control_d59; assert_in_epsilon(2.0, worksheet.control_d59, 0.002); end
  def test_control_d60; assert_in_epsilon(2.0, worksheet.control_d60, 0.002); end
  def test_control_d61; assert_in_epsilon(2.0, worksheet.control_d61, 0.002); end
  def test_control_d63; assert_in_epsilon(2.0, worksheet.control_d63, 0.002); end
  def test_control_d64; assert_in_epsilon(2.0, worksheet.control_d64, 0.002); end
  def test_control_d65; assert_in_delta(1.0, worksheet.control_d65, 0.002); end
  def test_control_d66; assert_in_epsilon(2.0, worksheet.control_d66, 0.002); end
  def test_control_g17; assert_in_epsilon(2050.0, worksheet.control_g17, 0.002); end
  def test_control_g18; assert_in_epsilon(2050.0, worksheet.control_g18, 0.002); end
  def test_control_g19; assert_in_epsilon(2050.0, worksheet.control_g19, 0.002); end
  def test_control_g20; assert_in_epsilon(2050.0, worksheet.control_g20, 0.002); end
  def test_control_g21; assert_in_epsilon(2050.0, worksheet.control_g21, 0.002); end
  def test_control_g22; assert_in_epsilon(2050.0, worksheet.control_g22, 0.002); end
  def test_control_g23; assert_in_epsilon(2050.0, worksheet.control_g23, 0.002); end
  def test_control_g24; assert_in_epsilon(2050.0, worksheet.control_g24, 0.002); end
  def test_control_g26; assert_in_epsilon(2050.0, worksheet.control_g26, 0.002); end
  def test_control_g27; assert_in_epsilon(2050.0, worksheet.control_g27, 0.002); end
  def test_control_g28; assert_in_epsilon(2040.0, worksheet.control_g28, 0.002); end
  def test_control_g29; assert_in_epsilon(2050.0, worksheet.control_g29, 0.002); end
  def test_control_g30; assert_in_epsilon(2050.0, worksheet.control_g30, 0.002); end
  def test_control_g31; assert_in_epsilon(2050.0, worksheet.control_g31, 0.002); end
  def test_control_g32; assert_in_epsilon(2050.0, worksheet.control_g32, 0.002); end
  def test_control_g33; assert_in_epsilon(2050.0, worksheet.control_g33, 0.002); end
  def test_control_g34; assert_in_epsilon(2050.0, worksheet.control_g34, 0.002); end
  def test_control_g35; assert_in_epsilon(2050.0, worksheet.control_g35, 0.002); end
  def test_control_g36; assert_in_epsilon(2050.0, worksheet.control_g36, 0.002); end
  def test_control_g37; assert_in_epsilon(2050.0, worksheet.control_g37, 0.002); end
  def test_control_g39; assert_in_epsilon(2050.0, worksheet.control_g39, 0.002); end
  def test_control_g40; assert_in_epsilon(2050.0, worksheet.control_g40, 0.002); end
  def test_control_g41; assert_in_epsilon(2050.0, worksheet.control_g41, 0.002); end
  def test_control_g42; assert_in_epsilon(2050.0, worksheet.control_g42, 0.002); end
  def test_control_g43; assert_in_epsilon(2050.0, worksheet.control_g43, 0.002); end
  def test_control_g45; assert_in_epsilon(2060.0, worksheet.control_g45, 0.002); end
  def test_control_g46; assert_in_epsilon(2050.0, worksheet.control_g46, 0.002); end
  def test_control_g47; assert_in_epsilon(2050.0, worksheet.control_g47, 0.002); end
  def test_control_g48; assert_in_epsilon(2050.0, worksheet.control_g48, 0.002); end
  def test_control_g49; assert_in_epsilon(2050.0, worksheet.control_g49, 0.002); end
  def test_control_g50; assert_in_epsilon(2070.0, worksheet.control_g50, 0.002); end
  def test_control_g51; assert_in_epsilon(2060.0, worksheet.control_g51, 0.002); end
  def test_control_g52; assert_in_epsilon(2065.0, worksheet.control_g52, 0.002); end
  def test_control_g54; assert_in_epsilon(2050.0, worksheet.control_g54, 0.002); end
  def test_control_g55; assert_in_epsilon(2050.0, worksheet.control_g55, 0.002); end
  def test_control_g56; assert_in_epsilon(2050.0, worksheet.control_g56, 0.002); end
  def test_control_g57; assert_in_epsilon(2050.0, worksheet.control_g57, 0.002); end
  def test_control_g58; assert_in_epsilon(2050.0, worksheet.control_g58, 0.002); end
  def test_control_g59; assert_in_epsilon(2050.0, worksheet.control_g59, 0.002); end
  def test_control_g60; assert_in_epsilon(2050.0, worksheet.control_g60, 0.002); end
  def test_control_g61; assert_in_epsilon(2050.0, worksheet.control_g61, 0.002); end
  def test_control_g63; assert_in_epsilon(2050.0, worksheet.control_g63, 0.002); end
  def test_control_g64; assert_in_epsilon(2070.0, worksheet.control_g64, 0.002); end
  def test_control_g65; assert_in_epsilon(2050.0, worksheet.control_g65, 0.002); end
  def test_control_g66; assert_in_epsilon(2050.0, worksheet.control_g66, 0.002); end
  def test_control_e17; assert_in_epsilon(2020.0, worksheet.control_e17, 0.002); end
  def test_control_e18; assert_in_epsilon(2020.0, worksheet.control_e18, 0.002); end
  def test_control_e19; assert_in_epsilon(2020.0, worksheet.control_e19, 0.002); end
  def test_control_e20; assert_in_epsilon(2020.0, worksheet.control_e20, 0.002); end
  def test_control_e21; assert_in_epsilon(2020.0, worksheet.control_e21, 0.002); end
  def test_control_e22; assert_in_epsilon(2020.0, worksheet.control_e22, 0.002); end
  def test_control_e23; assert_in_epsilon(2020.0, worksheet.control_e23, 0.002); end
  def test_control_e24; assert_in_epsilon(2020.0, worksheet.control_e24, 0.002); end
  def test_control_e26; assert_in_epsilon(2020.0, worksheet.control_e26, 0.002); end
  def test_control_e27; assert_in_epsilon(2020.0, worksheet.control_e27, 0.002); end
  def test_control_e28; assert_in_epsilon(2020.0, worksheet.control_e28, 0.002); end
  def test_control_e29; assert_in_epsilon(2020.0, worksheet.control_e29, 0.002); end
  def test_control_e30; assert_in_epsilon(2020.0, worksheet.control_e30, 0.002); end
  def test_control_e31; assert_in_epsilon(2020.0, worksheet.control_e31, 0.002); end
  def test_control_e32; assert_in_epsilon(2020.0, worksheet.control_e32, 0.002); end
  def test_control_e33; assert_in_epsilon(2020.0, worksheet.control_e33, 0.002); end
  def test_control_e34; assert_in_epsilon(2020.0, worksheet.control_e34, 0.002); end
  def test_control_e35; assert_in_epsilon(2020.0, worksheet.control_e35, 0.002); end
  def test_control_e36; assert_in_epsilon(2020.0, worksheet.control_e36, 0.002); end
  def test_control_e37; assert_in_epsilon(2020.0, worksheet.control_e37, 0.002); end
  def test_control_e39; assert_in_epsilon(2020.0, worksheet.control_e39, 0.002); end
  def test_control_e40; assert_in_epsilon(2020.0, worksheet.control_e40, 0.002); end
  def test_control_e41; assert_in_epsilon(2020.0, worksheet.control_e41, 0.002); end
  def test_control_e42; assert_in_epsilon(2020.0, worksheet.control_e42, 0.002); end
  def test_control_e43; assert_in_epsilon(2020.0, worksheet.control_e43, 0.002); end
  def test_control_e45; assert_in_epsilon(2030.0, worksheet.control_e45, 0.002); end
  def test_control_e46; assert_in_epsilon(2020.0, worksheet.control_e46, 0.002); end
  def test_control_e47; assert_in_epsilon(2020.0, worksheet.control_e47, 0.002); end
  def test_control_e48; assert_in_epsilon(2020.0, worksheet.control_e48, 0.002); end
  def test_control_e49; assert_in_epsilon(2020.0, worksheet.control_e49, 0.002); end
  def test_control_e50; assert_in_epsilon(2040.0, worksheet.control_e50, 0.002); end
  def test_control_e51; assert_in_epsilon(2030.0, worksheet.control_e51, 0.002); end
  def test_control_e52; assert_in_epsilon(2035.0, worksheet.control_e52, 0.002); end
  def test_control_e54; assert_in_epsilon(2020.0, worksheet.control_e54, 0.002); end
  def test_control_e55; assert_in_epsilon(2020.0, worksheet.control_e55, 0.002); end
  def test_control_e56; assert_in_epsilon(2020.0, worksheet.control_e56, 0.002); end
  def test_control_e57; assert_in_epsilon(2020.0, worksheet.control_e57, 0.002); end
  def test_control_e58; assert_in_epsilon(2020.0, worksheet.control_e58, 0.002); end
  def test_control_e59; assert_in_epsilon(2020.0, worksheet.control_e59, 0.002); end
  def test_control_e60; assert_in_epsilon(2020.0, worksheet.control_e60, 0.002); end
  def test_control_e61; assert_in_epsilon(2020.0, worksheet.control_e61, 0.002); end
  def test_control_e63; assert_in_epsilon(2020.0, worksheet.control_e63, 0.002); end
  def test_control_e64; assert_in_epsilon(2020.0, worksheet.control_e64, 0.002); end
  def test_control_e65; assert_in_epsilon(2020.0, worksheet.control_e65, 0.002); end
  def test_control_e66; assert_in_epsilon(2020.0, worksheet.control_e66, 0.002); end
  def test_control_i16; assert_equal("bau", worksheet.control_i16.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_i17; assert_in_delta(1.0, worksheet.control_i17, 0.002); end
  def test_control_i18; assert_in_delta(1.0, worksheet.control_i18, 0.002); end
  def test_control_i19; assert_in_delta(1.0, worksheet.control_i19, 0.002); end
  def test_control_i20; assert_in_delta(1.0, worksheet.control_i20, 0.002); end
  def test_control_i21; assert_in_delta(1.0, worksheet.control_i21, 0.002); end
  def test_control_i22; assert_in_delta(1.0, worksheet.control_i22, 0.002); end
  def test_control_i23; assert_in_delta(1.0, worksheet.control_i23, 0.002); end
  def test_control_i24; assert_in_delta(1.0, worksheet.control_i24, 0.002); end
  def test_control_i26; assert_in_delta(1.0, worksheet.control_i26, 0.002); end
  def test_control_i27; assert_in_delta(1.0, worksheet.control_i27, 0.002); end
  def test_control_i28; assert_in_delta(1.0, worksheet.control_i28, 0.002); end
  def test_control_i29; assert_in_delta(1.0, worksheet.control_i29, 0.002); end
  def test_control_i30; assert_in_delta(1.0, worksheet.control_i30, 0.002); end
  def test_control_i31; assert_in_delta(1.0, worksheet.control_i31, 0.002); end
  def test_control_i32; assert_in_delta(1.0, worksheet.control_i32, 0.002); end
  def test_control_i33; assert_in_delta(1.0, worksheet.control_i33, 0.002); end
  def test_control_i34; assert_in_delta(1.0, worksheet.control_i34, 0.002); end
  def test_control_i35; assert_in_delta(1.0, worksheet.control_i35, 0.002); end
  def test_control_i36; assert_in_delta(1.0, worksheet.control_i36, 0.002); end
  def test_control_i37; assert_in_delta(1.0, worksheet.control_i37, 0.002); end
  def test_control_i39; assert_in_delta(1.0, worksheet.control_i39, 0.002); end
  def test_control_i40; assert_in_delta(1.0, worksheet.control_i40, 0.002); end
  def test_control_i41; assert_in_delta(1.0, worksheet.control_i41, 0.002); end
  def test_control_i42; assert_in_delta(1.0, worksheet.control_i42, 0.002); end
  def test_control_i43; assert_in_delta(1.0, worksheet.control_i43, 0.002); end
  def test_control_i45; assert_in_delta(1.0, worksheet.control_i45, 0.002); end
  def test_control_i46; assert_in_delta(1.0, worksheet.control_i46, 0.002); end
  def test_control_i47; assert_in_delta(1.0, worksheet.control_i47, 0.002); end
  def test_control_i48; assert_in_delta(1.0, worksheet.control_i48, 0.002); end
  def test_control_i49; assert_in_delta(1.0, worksheet.control_i49, 0.002); end
  def test_control_i50; assert_in_delta(1.0, worksheet.control_i50, 0.002); end
  def test_control_i51; assert_in_delta(1.0, worksheet.control_i51, 0.002); end
  def test_control_i52; assert_in_delta(1.0, worksheet.control_i52, 0.002); end
  def test_control_i54; assert_in_delta(1.0, worksheet.control_i54, 0.002); end
  def test_control_i55; assert_in_delta(1.0, worksheet.control_i55, 0.002); end
  def test_control_i56; assert_in_delta(1.0, worksheet.control_i56, 0.002); end
  def test_control_i57; assert_in_delta(1.0, worksheet.control_i57, 0.002); end
  def test_control_i58; assert_in_delta(1.0, worksheet.control_i58, 0.002); end
  def test_control_i59; assert_in_delta(1.0, worksheet.control_i59, 0.002); end
  def test_control_i60; assert_in_delta(1.0, worksheet.control_i60, 0.002); end
  def test_control_i61; assert_in_delta(1.0, worksheet.control_i61, 0.002); end
  def test_control_i63; assert_in_delta(1.0, worksheet.control_i63, 0.002); end
  def test_control_i64; assert_in_delta(1.0, worksheet.control_i64, 0.002); end
  def test_control_i65; assert_in_delta(1.0, worksheet.control_i65, 0.002); end
  def test_control_i66; assert_in_delta(1.0, worksheet.control_i66, 0.002); end
  def test_control_i67; assert_equal("jean-claude junker", worksheet.control_i67.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_i68; assert_in_epsilon(66.0, worksheet.control_i68, 0.002); end
  def test_control_i69; assert_in_epsilon(12.0, worksheet.control_i69, 0.002); end
  def test_control_ef17; assert_in_delta(1.0, worksheet.control_ef17, 0.002); end
  def test_control_eg17; assert_in_epsilon(2.0, worksheet.control_eg17, 0.002); end
  def test_control_eh17; assert_in_epsilon(3.0, worksheet.control_eh17, 0.002); end
  def test_control_ei17; assert_in_epsilon(4.0, worksheet.control_ei17, 0.002); end
  def test_control_ef18; assert_in_delta(1.0, worksheet.control_ef18, 0.002); end
  def test_control_eg18; assert_in_epsilon(2.0, worksheet.control_eg18, 0.002); end
  def test_control_eh18; assert_in_epsilon(3.0, worksheet.control_eh18, 0.002); end
  def test_control_ei18; assert_in_epsilon(4.0, worksheet.control_ei18, 0.002); end
  def test_control_ef19; assert_in_delta(1.0, worksheet.control_ef19, 0.002); end
  def test_control_eg19; assert_in_epsilon(2.0, worksheet.control_eg19, 0.002); end
  def test_control_eh19; assert_in_epsilon(3.0, worksheet.control_eh19, 0.002); end
  def test_control_ei19; assert_in_epsilon(4.0, worksheet.control_ei19, 0.002); end
  def test_control_ef20; assert_in_delta(1.0, worksheet.control_ef20, 0.002); end
  def test_control_eg20; assert_in_epsilon(2.0, worksheet.control_eg20, 0.002); end
  def test_control_eh20; assert_in_epsilon(3.0, worksheet.control_eh20, 0.002); end
  def test_control_ei20; assert_in_epsilon(4.0, worksheet.control_ei20, 0.002); end
  def test_control_ef21; assert_in_delta(1.0, worksheet.control_ef21, 0.002); end
  def test_control_eg21; assert_in_epsilon(2.0, worksheet.control_eg21, 0.002); end
  def test_control_eh21; assert_in_epsilon(3.0, worksheet.control_eh21, 0.002); end
  def test_control_ei21; assert_in_epsilon(4.0, worksheet.control_ei21, 0.002); end
  def test_control_ef22; assert_in_delta(1.0, worksheet.control_ef22, 0.002); end
  def test_control_eg22; assert_in_epsilon(2.0, worksheet.control_eg22, 0.002); end
  def test_control_eh22; assert_in_epsilon(3.0, worksheet.control_eh22, 0.002); end
  def test_control_ei22; assert_in_epsilon(4.0, worksheet.control_ei22, 0.002); end
  def test_control_ef23; assert_in_delta(1.0, worksheet.control_ef23, 0.002); end
  def test_control_eg23; assert_in_epsilon(2.0, worksheet.control_eg23, 0.002); end
  def test_control_eh23; assert_in_epsilon(3.0, worksheet.control_eh23, 0.002); end
  def test_control_ei23; assert_in_epsilon(4.0, worksheet.control_ei23, 0.002); end
  def test_control_ef24; assert_in_delta(1.0, worksheet.control_ef24, 0.002); end
  def test_control_eg24; assert_in_epsilon(2.0, worksheet.control_eg24, 0.002); end
  def test_control_eh24; assert_in_epsilon(3.0, worksheet.control_eh24, 0.002); end
  def test_control_ei24; assert_in_epsilon(4.0, worksheet.control_ei24, 0.002); end
  def test_control_ef26; assert_in_delta(1.0, worksheet.control_ef26, 0.002); end
  def test_control_eg26; assert_in_epsilon(2.0, worksheet.control_eg26, 0.002); end
  def test_control_eh26; assert_in_epsilon(3.0, worksheet.control_eh26, 0.002); end
  def test_control_ei26; assert_in_epsilon(4.0, worksheet.control_ei26, 0.002); end
  def test_control_ef27; assert_in_delta(1.0, worksheet.control_ef27, 0.002); end
  def test_control_eg27; assert_in_epsilon(2.0, worksheet.control_eg27, 0.002); end
  def test_control_eh27; assert_in_epsilon(3.0, worksheet.control_eh27, 0.002); end
  def test_control_ei27; assert_in_epsilon(4.0, worksheet.control_ei27, 0.002); end
  def test_control_ef28; assert_in_delta(1.0, worksheet.control_ef28, 0.002); end
  def test_control_eg28; assert_in_epsilon(2.0, worksheet.control_eg28, 0.002); end
  def test_control_eh28; assert_in_epsilon(3.0, worksheet.control_eh28, 0.002); end
  def test_control_ei28; assert_in_epsilon(4.0, worksheet.control_ei28, 0.002); end
  def test_control_ef29; assert_in_delta(1.0, worksheet.control_ef29, 0.002); end
  def test_control_eg29; assert_in_epsilon(2.0, worksheet.control_eg29, 0.002); end
  def test_control_eh29; assert_in_epsilon(3.0, worksheet.control_eh29, 0.002); end
  def test_control_ei29; assert_in_epsilon(4.0, worksheet.control_ei29, 0.002); end
  def test_control_ef30; assert_in_delta(1.0, worksheet.control_ef30, 0.002); end
  def test_control_eg30; assert_in_epsilon(2.0, worksheet.control_eg30, 0.002); end
  def test_control_eh30; assert_in_epsilon(3.0, worksheet.control_eh30, 0.002); end
  def test_control_ei30; assert_in_epsilon(4.0, worksheet.control_ei30, 0.002); end
  def test_control_ef31; assert_in_delta(1.0, worksheet.control_ef31, 0.002); end
  def test_control_eg31; assert_in_epsilon(2.0, worksheet.control_eg31, 0.002); end
  def test_control_eh31; assert_in_epsilon(3.0, worksheet.control_eh31, 0.002); end
  def test_control_ei31; assert_in_epsilon(4.0, worksheet.control_ei31, 0.002); end
  def test_control_ef32; assert_in_delta(1.0, worksheet.control_ef32, 0.002); end
  def test_control_eg32; assert_in_epsilon(2.0, worksheet.control_eg32, 0.002); end
  def test_control_eh32; assert_in_epsilon(3.0, worksheet.control_eh32, 0.002); end
  def test_control_ei32; assert_in_epsilon(4.0, worksheet.control_ei32, 0.002); end
  def test_control_ef33; assert_in_delta(1.0, worksheet.control_ef33, 0.002); end
  def test_control_eg33; assert_in_epsilon(2.0, worksheet.control_eg33, 0.002); end
  def test_control_eh33; assert_in_epsilon(3.0, worksheet.control_eh33, 0.002); end
  def test_control_ei33; assert_in_epsilon(4.0, worksheet.control_ei33, 0.002); end
  def test_control_ef34; assert_in_delta(1.0, worksheet.control_ef34, 0.002); end
  def test_control_eg34; assert_in_epsilon(2.0, worksheet.control_eg34, 0.002); end
  def test_control_eh34; assert_in_epsilon(3.0, worksheet.control_eh34, 0.002); end
  def test_control_ei34; assert_in_epsilon(4.0, worksheet.control_ei34, 0.002); end
  def test_control_ef35; assert_in_delta(1.0, worksheet.control_ef35, 0.002); end
  def test_control_eg35; assert_in_epsilon(2.0, worksheet.control_eg35, 0.002); end
  def test_control_eh35; assert_in_epsilon(3.0, worksheet.control_eh35, 0.002); end
  def test_control_ei35; assert_in_epsilon(4.0, worksheet.control_ei35, 0.002); end
  def test_control_ef36; assert_in_delta(1.0, worksheet.control_ef36, 0.002); end
  def test_control_eg36; assert_in_epsilon(2.0, worksheet.control_eg36, 0.002); end
  def test_control_eh36; assert_in_epsilon(3.0, worksheet.control_eh36, 0.002); end
  def test_control_ei36; assert_in_epsilon(4.0, worksheet.control_ei36, 0.002); end
  def test_control_ef37; assert_in_delta(1.0, worksheet.control_ef37, 0.002); end
  def test_control_eg37; assert_in_epsilon(2.0, worksheet.control_eg37, 0.002); end
  def test_control_eh37; assert_in_epsilon(3.0, worksheet.control_eh37, 0.002); end
  def test_control_ei37; assert_in_epsilon(4.0, worksheet.control_ei37, 0.002); end
  def test_control_ef39; assert_in_delta(1.0, worksheet.control_ef39, 0.002); end
  def test_control_eg39; assert_in_epsilon(2.0, worksheet.control_eg39, 0.002); end
  def test_control_eh39; assert_in_epsilon(3.0, worksheet.control_eh39, 0.002); end
  def test_control_ei39; assert_in_epsilon(4.0, worksheet.control_ei39, 0.002); end
  def test_control_ef40; assert_in_delta(1.0, worksheet.control_ef40, 0.002); end
  def test_control_eg40; assert_in_epsilon(2.0, worksheet.control_eg40, 0.002); end
  def test_control_eh40; assert_in_epsilon(3.0, worksheet.control_eh40, 0.002); end
  def test_control_ei40; assert_in_epsilon(4.0, worksheet.control_ei40, 0.002); end
  def test_control_ef41; assert_in_delta(1.0, worksheet.control_ef41, 0.002); end
  def test_control_eg41; assert_in_epsilon(2.0, worksheet.control_eg41, 0.002); end
  def test_control_eh41; assert_in_epsilon(3.0, worksheet.control_eh41, 0.002); end
  def test_control_ei41; assert_in_epsilon(4.0, worksheet.control_ei41, 0.002); end
  def test_control_ef42; assert_in_delta(1.0, worksheet.control_ef42, 0.002); end
  def test_control_eg42; assert_in_epsilon(2.0, worksheet.control_eg42, 0.002); end
  def test_control_eh42; assert_in_epsilon(3.0, worksheet.control_eh42, 0.002); end
  def test_control_ei42; assert_in_epsilon(4.0, worksheet.control_ei42, 0.002); end
  def test_control_ef43; assert_in_delta(1.0, worksheet.control_ef43, 0.002); end
  def test_control_eg43; assert_in_epsilon(2.0, worksheet.control_eg43, 0.002); end
  def test_control_eh43; assert_in_epsilon(3.0, worksheet.control_eh43, 0.002); end
  def test_control_ei43; assert_in_epsilon(4.0, worksheet.control_ei43, 0.002); end
  def test_control_ef45; assert_in_delta(1.0, worksheet.control_ef45, 0.002); end
  def test_control_eg45; assert_in_epsilon(2.0, worksheet.control_eg45, 0.002); end
  def test_control_eh45; assert_in_epsilon(3.0, worksheet.control_eh45, 0.002); end
  def test_control_ei45; assert_in_epsilon(4.0, worksheet.control_ei45, 0.002); end
  def test_control_ef46; assert_in_delta(1.0, worksheet.control_ef46, 0.002); end
  def test_control_eg46; assert_in_epsilon(2.0, worksheet.control_eg46, 0.002); end
  def test_control_eh46; assert_in_epsilon(3.0, worksheet.control_eh46, 0.002); end
  def test_control_ei46; assert_in_epsilon(4.0, worksheet.control_ei46, 0.002); end
  def test_control_ef47; assert_in_delta(1.0, worksheet.control_ef47, 0.002); end
  def test_control_eg47; assert_in_epsilon(2.0, worksheet.control_eg47, 0.002); end
  def test_control_eh47; assert_in_epsilon(3.0, worksheet.control_eh47, 0.002); end
  def test_control_ei47; assert_in_epsilon(4.0, worksheet.control_ei47, 0.002); end
  def test_control_ef48; assert_in_delta(1.0, worksheet.control_ef48, 0.002); end
  def test_control_eg48; assert_in_epsilon(2.0, worksheet.control_eg48, 0.002); end
  def test_control_eh48; assert_in_epsilon(3.0, worksheet.control_eh48, 0.002); end
  def test_control_ei48; assert_in_epsilon(4.0, worksheet.control_ei48, 0.002); end
  def test_control_ef49; assert_in_delta(1.0, worksheet.control_ef49, 0.002); end
  def test_control_eg49; assert_in_epsilon(2.0, worksheet.control_eg49, 0.002); end
  def test_control_eh49; assert_in_epsilon(3.0, worksheet.control_eh49, 0.002); end
  def test_control_ei49; assert_in_epsilon(4.0, worksheet.control_ei49, 0.002); end
  def test_control_ef50; assert_in_delta(1.0, worksheet.control_ef50, 0.002); end
  def test_control_eg50; assert_in_epsilon(2.0, worksheet.control_eg50, 0.002); end
  def test_control_eh50; assert_in_epsilon(3.0, worksheet.control_eh50, 0.002); end
  def test_control_ei50; assert_in_epsilon(4.0, worksheet.control_ei50, 0.002); end
  def test_control_ef51; assert_in_delta(1.0, worksheet.control_ef51, 0.002); end
  def test_control_eg51; assert_in_epsilon(2.0, worksheet.control_eg51, 0.002); end
  def test_control_eh51; assert_in_epsilon(3.0, worksheet.control_eh51, 0.002); end
  def test_control_ei51; assert_in_epsilon(4.0, worksheet.control_ei51, 0.002); end
  def test_control_ef52; assert_in_delta(1.0, worksheet.control_ef52, 0.002); end
  def test_control_eg52; assert_in_epsilon(2.0, worksheet.control_eg52, 0.002); end
  def test_control_eh52; assert_in_epsilon(3.0, worksheet.control_eh52, 0.002); end
  def test_control_ei52; assert_in_epsilon(4.0, worksheet.control_ei52, 0.002); end
  def test_control_ef54; assert_in_delta(1.0, worksheet.control_ef54, 0.002); end
  def test_control_eg54; assert_in_epsilon(2.0, worksheet.control_eg54, 0.002); end
  def test_control_eh54; assert_in_epsilon(3.0, worksheet.control_eh54, 0.002); end
  def test_control_ei54; assert_in_epsilon(4.0, worksheet.control_ei54, 0.002); end
  def test_control_ef55; assert_in_delta(1.0, worksheet.control_ef55, 0.002); end
  def test_control_eg55; assert_in_epsilon(2.0, worksheet.control_eg55, 0.002); end
  def test_control_eh55; assert_in_epsilon(3.0, worksheet.control_eh55, 0.002); end
  def test_control_ei55; assert_in_epsilon(4.0, worksheet.control_ei55, 0.002); end
  def test_control_ef56; assert_in_delta(1.0, worksheet.control_ef56, 0.002); end
  def test_control_eg56; assert_in_epsilon(2.0, worksheet.control_eg56, 0.002); end
  def test_control_eh56; assert_in_epsilon(3.0, worksheet.control_eh56, 0.002); end
  def test_control_ei56; assert_in_epsilon(4.0, worksheet.control_ei56, 0.002); end
  def test_control_ef57; assert_in_delta(1.0, worksheet.control_ef57, 0.002); end
  def test_control_eg57; assert_in_epsilon(2.0, worksheet.control_eg57, 0.002); end
  def test_control_eh57; assert_in_epsilon(3.0, worksheet.control_eh57, 0.002); end
  def test_control_ei57; assert_in_epsilon(4.0, worksheet.control_ei57, 0.002); end
  def test_control_ef58; assert_in_delta(1.0, worksheet.control_ef58, 0.002); end
  def test_control_eg58; assert_in_epsilon(2.0, worksheet.control_eg58, 0.002); end
  def test_control_eh58; assert_in_epsilon(3.0, worksheet.control_eh58, 0.002); end
  def test_control_ei58; assert_in_epsilon(4.0, worksheet.control_ei58, 0.002); end
  def test_control_ef59; assert_in_delta(1.0, worksheet.control_ef59, 0.002); end
  def test_control_eg59; assert_in_epsilon(2.0, worksheet.control_eg59, 0.002); end
  def test_control_eh59; assert_in_epsilon(3.0, worksheet.control_eh59, 0.002); end
  def test_control_ei59; assert_in_epsilon(4.0, worksheet.control_ei59, 0.002); end
  def test_control_ef60; assert_in_delta(1.0, worksheet.control_ef60, 0.002); end
  def test_control_eg60; assert_in_epsilon(2.0, worksheet.control_eg60, 0.002); end
  def test_control_eh60; assert_in_epsilon(3.0, worksheet.control_eh60, 0.002); end
  def test_control_ei60; assert_in_epsilon(4.0, worksheet.control_ei60, 0.002); end
  def test_control_ef61; assert_in_delta(1.0, worksheet.control_ef61, 0.002); end
  def test_control_eg61; assert_in_epsilon(2.0, worksheet.control_eg61, 0.002); end
  def test_control_eh61; assert_in_epsilon(3.0, worksheet.control_eh61, 0.002); end
  def test_control_ei61; assert_in_epsilon(4.0, worksheet.control_ei61, 0.002); end
  def test_control_ef63; assert_in_delta(1.0, worksheet.control_ef63, 0.002); end
  def test_control_eg63; assert_in_epsilon(2.0, worksheet.control_eg63, 0.002); end
  def test_control_eh63; assert_in_epsilon(3.0, worksheet.control_eh63, 0.002); end
  def test_control_ei63; assert_in_epsilon(4.0, worksheet.control_ei63, 0.002); end
  def test_control_ef64; assert_in_delta(1.0, worksheet.control_ef64, 0.002); end
  def test_control_eg64; assert_in_epsilon(2.0, worksheet.control_eg64, 0.002); end
  def test_control_eh64; assert_in_epsilon(3.0, worksheet.control_eh64, 0.002); end
  def test_control_ei64; assert_in_epsilon(4.0, worksheet.control_ei64, 0.002); end
  def test_control_ef65; assert_in_delta(1.0, worksheet.control_ef65, 0.002); end
  def test_control_eg65; assert_in_epsilon(2.0, worksheet.control_eg65, 0.002); end
  def test_control_eh65; assert_in_epsilon(3.0, worksheet.control_eh65, 0.002); end
  def test_control_ei65; assert_in_epsilon(4.0, worksheet.control_ei65, 0.002); end
  def test_control_ef66; assert_in_delta(1.0, worksheet.control_ef66, 0.002); end
  def test_control_eg66; assert_in_epsilon(2.0, worksheet.control_eg66, 0.002); end
  def test_control_eh66; assert_in_epsilon(3.0, worksheet.control_eh66, 0.002); end
  def test_control_ei66; assert_in_epsilon(4.0, worksheet.control_ei66, 0.002); end
  def test_control_c17; assert_equal("Buildings Temperature", worksheet.control_c17.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c18; assert_equal("Buildings Insulation", worksheet.control_c18.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c19; assert_equal("District Heat Share", worksheet.control_c19.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c20; assert_equal("Heat Pump Share", worksheet.control_c20.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c21; assert_equal("Hybrid Heat Share", worksheet.control_c21.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c22; assert_equal("Heat Network - Heat Pump", worksheet.control_c22.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c23; assert_equal("Heat Network - Biomass CHP", worksheet.control_c23.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c24; assert_equal("Lighting and Applicances", worksheet.control_c24.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c26; assert_equal("UK Transport Demand", worksheet.control_c26.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c27; assert_equal("International Aviation", worksheet.control_c27.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c28; assert_equal("Light Vehicles - Electric", worksheet.control_c28.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c29; assert_equal("Light Vehicles - Hydrogen", worksheet.control_c29.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c30; assert_equal("Light Vehicles - Hybrid", worksheet.control_c30.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c31; assert_equal("Light Vehicles - Biofuel", worksheet.control_c31.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c32; assert_equal("Heavy Vehicles - Electric", worksheet.control_c32.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c33; assert_equal("Heavy Vehicles - Hydrogen", worksheet.control_c33.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c34; assert_equal("Heavy Vehicles - Hybrid", worksheet.control_c34.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c35; assert_equal("Heavy Vehicles - Biofuel", worksheet.control_c35.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c36; assert_equal("Aviation Efficiency", worksheet.control_c36.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c37; assert_equal("Aviation Biofuel", worksheet.control_c37.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c39; assert_equal("Industrial Efficiency", worksheet.control_c39.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c40; assert_equal("Industrial Electrification", worksheet.control_c40.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c41; assert_equal("Industry Shift to Biomass", worksheet.control_c41.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c42; assert_equal("Industry Shift to Gas", worksheet.control_c42.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c43; assert_equal("Industry CCS", worksheet.control_c43.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c45; assert_equal("Hydrogen Gas Grid Share", worksheet.control_c45.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c46; assert_equal("Biomethane Gas Grid Share", worksheet.control_c46.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c47; assert_equal("Hydrogen from Biomass CCS", worksheet.control_c47.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c48; assert_equal("Hydrogen from Methane CCS", worksheet.control_c48.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c49; assert_equal("Zero Carbon Hydrogen Imports", worksheet.control_c49.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c50; assert_equal("Greenhouse Gas Removal", worksheet.control_c50.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c51; assert_equal("Bio Transformation with CCS", worksheet.control_c51.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c52; assert_equal("CCS Capture Rate", worksheet.control_c52.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c54; assert_equal("Seasonal Storage", worksheet.control_c54.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c55; assert_equal("DSR, Batteries & Interconnectors", worksheet.control_c55.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c56; assert_equal("Biomass with CCS", worksheet.control_c56.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c57; assert_equal("Nuclear", worksheet.control_c57.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c58; assert_equal("Offshore & Onshore Wind", worksheet.control_c58.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c59; assert_equal("Solar", worksheet.control_c59.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c60; assert_equal("Wave & Tidal", worksheet.control_c60.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c61; assert_equal("Gas with CCS", worksheet.control_c61.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c63; assert_equal("Farming Yield & Efficiency", worksheet.control_c63.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c64; assert_equal("Forestry", worksheet.control_c64.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c65; assert_equal("Land for Bioenergy", worksheet.control_c65.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_c66; assert_equal("Waste Reduction", worksheet.control_c66.to_s.gsub(/[\n\r]+/,'')); end
  def test_control_h17; assert_in_epsilon(4.0, worksheet.control_h17, 0.002); end
  def test_control_h18; assert_in_epsilon(4.0, worksheet.control_h18, 0.002); end
  def test_control_h19; assert_in_epsilon(4.0, worksheet.control_h19, 0.002); end
  def test_control_h20; assert_in_epsilon(4.0, worksheet.control_h20, 0.002); end
  def test_control_h21; assert_in_epsilon(4.0, worksheet.control_h21, 0.002); end
  def test_control_h22; assert_in_epsilon(4.0, worksheet.control_h22, 0.002); end
  def test_control_h23; assert_in_epsilon(4.0, worksheet.control_h23, 0.002); end
  def test_control_h24; assert_in_epsilon(4.0, worksheet.control_h24, 0.002); end
  def test_control_h26; assert_in_epsilon(4.0, worksheet.control_h26, 0.002); end
  def test_control_h27; assert_in_epsilon(4.0, worksheet.control_h27, 0.002); end
  def test_control_h28; assert_in_epsilon(4.0, worksheet.control_h28, 0.002); end
  def test_control_h29; assert_in_epsilon(4.0, worksheet.control_h29, 0.002); end
  def test_control_h30; assert_in_epsilon(4.0, worksheet.control_h30, 0.002); end
  def test_control_h31; assert_in_epsilon(4.0, worksheet.control_h31, 0.002); end
  def test_control_h32; assert_in_epsilon(4.0, worksheet.control_h32, 0.002); end
  def test_control_h33; assert_in_epsilon(4.0, worksheet.control_h33, 0.002); end
  def test_control_h34; assert_in_epsilon(4.0, worksheet.control_h34, 0.002); end
  def test_control_h35; assert_in_epsilon(4.0, worksheet.control_h35, 0.002); end
  def test_control_h36; assert_in_epsilon(4.0, worksheet.control_h36, 0.002); end
  def test_control_h37; assert_in_epsilon(4.0, worksheet.control_h37, 0.002); end
  def test_control_h39; assert_in_epsilon(4.0, worksheet.control_h39, 0.002); end
  def test_control_h40; assert_in_epsilon(4.0, worksheet.control_h40, 0.002); end
  def test_control_h41; assert_in_epsilon(4.0, worksheet.control_h41, 0.002); end
  def test_control_h42; assert_in_epsilon(4.0, worksheet.control_h42, 0.002); end
  def test_control_h43; assert_in_epsilon(4.0, worksheet.control_h43, 0.002); end
  def test_control_h45; assert_in_epsilon(4.0, worksheet.control_h45, 0.002); end
  def test_control_h46; assert_in_epsilon(4.0, worksheet.control_h46, 0.002); end
  def test_control_h47; assert_in_epsilon(4.0, worksheet.control_h47, 0.002); end
  def test_control_h48; assert_in_epsilon(4.0, worksheet.control_h48, 0.002); end
  def test_control_h49; assert_in_epsilon(4.0, worksheet.control_h49, 0.002); end
  def test_control_h50; assert_in_epsilon(4.0, worksheet.control_h50, 0.002); end
  def test_control_h51; assert_in_epsilon(4.0, worksheet.control_h51, 0.002); end
  def test_control_h52; assert_in_epsilon(4.0, worksheet.control_h52, 0.002); end
  def test_control_h54; assert_in_epsilon(4.0, worksheet.control_h54, 0.002); end
  def test_control_h55; assert_in_epsilon(4.0, worksheet.control_h55, 0.002); end
  def test_control_h56; assert_in_epsilon(4.0, worksheet.control_h56, 0.002); end
  def test_control_h57; assert_in_epsilon(4.0, worksheet.control_h57, 0.002); end
  def test_control_h58; assert_in_epsilon(4.0, worksheet.control_h58, 0.002); end
  def test_control_h59; assert_in_epsilon(4.0, worksheet.control_h59, 0.002); end
  def test_control_h60; assert_in_epsilon(4.0, worksheet.control_h60, 0.002); end
  def test_control_h61; assert_in_epsilon(4.0, worksheet.control_h61, 0.002); end
  def test_control_h63; assert_in_epsilon(4.0, worksheet.control_h63, 0.002); end
  def test_control_h64; assert_in_epsilon(4.0, worksheet.control_h64, 0.002); end
  def test_control_h65; assert_in_epsilon(4.0, worksheet.control_h65, 0.002); end
  def test_control_h66; assert_in_epsilon(4.0, worksheet.control_h66, 0.002); end
  def test_results_e583; assert_equal("Fossil Fuel", worksheet.results_e583.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f583; assert_in_epsilon(53.0, worksheet.results_f583, 0.002); end
  def test_results_g583; assert_in_epsilon(66.43750816947981, worksheet.results_g583, 0.002); end
  def test_results_h583; assert_in_epsilon(71.8765016678253, worksheet.results_h583, 0.002); end
  def test_results_i583; assert_in_epsilon(76.31551417040463, worksheet.results_i583, 0.002); end
  def test_results_j583; assert_in_epsilon(79.32554980259958, worksheet.results_j583, 0.002); end
  def test_results_k583; assert_in_epsilon(78.02565570175432, worksheet.results_k583, 0.002); end
  def test_results_l583; assert_in_epsilon(73.02565570175432, worksheet.results_l583, 0.002); end
  def test_results_m583; assert_in_epsilon(55.29257845628436, worksheet.results_m583, 0.002); end
  def test_results_n583; assert_in_epsilon(61.68677158376656, worksheet.results_n583, 0.002); end
  def test_results_o583; assert_in_epsilon(68.38784047318114, worksheet.results_o583, 0.002); end
  def test_results_p583; assert_in_epsilon(69.22383888002562, worksheet.results_p583, 0.002); end
  def test_results_q583; assert_in_epsilon(70.45649593824434, worksheet.results_q583, 0.002); end
  def test_results_r583; assert_in_epsilon(71.93753693990158, worksheet.results_r583, 0.002); end
  def test_results_s583; assert_in_epsilon(73.4522603820611, worksheet.results_s583, 0.002); end
  def test_results_t583; assert_in_epsilon(74.86874322350724, worksheet.results_t583, 0.002); end
  def test_results_u583; assert_in_epsilon(76.28891738993318, worksheet.results_u583, 0.002); end
  def test_results_v583; assert_in_epsilon(77.67477081615992, worksheet.results_v583, 0.002); end
  def test_results_w583; assert_in_epsilon(79.48889489886054, worksheet.results_w583, 0.002); end
  def test_results_e584; assert_equal("Nuclear", worksheet.results_e584.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f584; assert_in_epsilon(9.0, worksheet.results_f584, 0.002); end
  def test_results_g584; assert_in_epsilon(8.0, worksheet.results_g584, 0.002); end
  def test_results_h584; assert_in_epsilon(9.956666666666665, worksheet.results_h584, 0.002); end
  def test_results_i584; assert_in_epsilon(16.173333333333325, worksheet.results_i584, 0.002); end
  def test_results_j584; assert_in_epsilon(22.13, worksheet.results_j584, 0.002); end
  def test_results_k584; assert_in_epsilon(28.086666666666662, worksheet.results_k584, 0.002); end
  def test_results_l584; assert_in_epsilon(34.04333333333333, worksheet.results_l584, 0.002); end
  def test_results_m584; assert_in_epsilon(39.99999999999999, worksheet.results_m584, 0.002); end
  def test_results_n584; assert_in_epsilon(39.99999999999999, worksheet.results_n584, 0.002); end
  def test_results_o584; assert_in_epsilon(39.99999999999999, worksheet.results_o584, 0.002); end
  def test_results_p584; assert_in_epsilon(39.99999999999999, worksheet.results_p584, 0.002); end
  def test_results_q584; assert_in_epsilon(39.99999999999999, worksheet.results_q584, 0.002); end
  def test_results_r584; assert_in_epsilon(39.99999999999999, worksheet.results_r584, 0.002); end
  def test_results_s584; assert_in_epsilon(39.99999999999999, worksheet.results_s584, 0.002); end
  def test_results_t584; assert_in_epsilon(39.99999999999999, worksheet.results_t584, 0.002); end
  def test_results_u584; assert_in_epsilon(39.99999999999999, worksheet.results_u584, 0.002); end
  def test_results_v584; assert_in_epsilon(39.99999999999999, worksheet.results_v584, 0.002); end
  def test_results_w584; assert_in_epsilon(39.99999999999999, worksheet.results_w584, 0.002); end
  def test_results_e585; assert_equal("Gas CCS", worksheet.results_e585.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f585; assert_in_delta(0.0, (worksheet.results_f585||0), 0.002); end
  def test_results_g585; assert_in_delta(0.0, (worksheet.results_g585||0), 0.002); end
  def test_results_h585; assert_in_delta(0.3333333333333332, worksheet.results_h585, 0.002); end
  def test_results_i585; assert_in_delta(0.6666666666666664, worksheet.results_i585, 0.002); end
  def test_results_j585; assert_in_delta(0.9999999999999999, worksheet.results_j585, 0.002); end
  def test_results_k585; assert_in_epsilon(1.3333333333333328, worksheet.results_k585, 0.002); end
  def test_results_l585; assert_in_epsilon(1.6666666666666665, worksheet.results_l585, 0.002); end
  def test_results_m585; assert_in_epsilon(1.9999999999999998, worksheet.results_m585, 0.002); end
  def test_results_n585; assert_in_epsilon(1.9999999999999998, worksheet.results_n585, 0.002); end
  def test_results_o585; assert_in_epsilon(1.9999999999999998, worksheet.results_o585, 0.002); end
  def test_results_p585; assert_in_epsilon(1.9999999999999998, worksheet.results_p585, 0.002); end
  def test_results_q585; assert_in_epsilon(1.9999999999999998, worksheet.results_q585, 0.002); end
  def test_results_r585; assert_in_epsilon(1.9999999999999998, worksheet.results_r585, 0.002); end
  def test_results_s585; assert_in_epsilon(1.9999999999999998, worksheet.results_s585, 0.002); end
  def test_results_t585; assert_in_epsilon(1.9999999999999998, worksheet.results_t585, 0.002); end
  def test_results_u585; assert_in_epsilon(1.9999999999999998, worksheet.results_u585, 0.002); end
  def test_results_v585; assert_in_epsilon(1.9999999999999998, worksheet.results_v585, 0.002); end
  def test_results_w585; assert_in_epsilon(1.9999999999999998, worksheet.results_w585, 0.002); end
  def test_results_e586; assert_equal("Biomass CCS", worksheet.results_e586.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f586; assert_in_delta(0.0, (worksheet.results_f586||0), 0.002); end
  def test_results_g586; assert_in_delta(0.0, (worksheet.results_g586||0), 0.002); end
  def test_results_h586; assert_in_delta(0.3333333333333332, worksheet.results_h586, 0.002); end
  def test_results_i586; assert_in_delta(0.6666666666666664, worksheet.results_i586, 0.002); end
  def test_results_j586; assert_in_delta(0.9999999999999999, worksheet.results_j586, 0.002); end
  def test_results_k586; assert_in_epsilon(1.3333333333333328, worksheet.results_k586, 0.002); end
  def test_results_l586; assert_in_epsilon(1.6666666666666665, worksheet.results_l586, 0.002); end
  def test_results_m586; assert_in_epsilon(1.9999999999999998, worksheet.results_m586, 0.002); end
  def test_results_n586; assert_in_epsilon(1.9999999999999998, worksheet.results_n586, 0.002); end
  def test_results_o586; assert_in_epsilon(1.9999999999999998, worksheet.results_o586, 0.002); end
  def test_results_p586; assert_in_epsilon(1.9999999999999998, worksheet.results_p586, 0.002); end
  def test_results_q586; assert_in_epsilon(1.9999999999999998, worksheet.results_q586, 0.002); end
  def test_results_r586; assert_in_epsilon(1.9999999999999998, worksheet.results_r586, 0.002); end
  def test_results_s586; assert_in_epsilon(1.9999999999999998, worksheet.results_s586, 0.002); end
  def test_results_t586; assert_in_epsilon(1.9999999999999998, worksheet.results_t586, 0.002); end
  def test_results_u586; assert_in_epsilon(1.9999999999999998, worksheet.results_u586, 0.002); end
  def test_results_v586; assert_in_epsilon(1.9999999999999998, worksheet.results_v586, 0.002); end
  def test_results_w586; assert_in_epsilon(1.9999999999999998, worksheet.results_w586, 0.002); end
  def test_results_e587; assert_equal("Wind Onshore", worksheet.results_e587.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f587; assert_in_epsilon(4.0, worksheet.results_f587, 0.002); end
  def test_results_g587; assert_in_epsilon(4.0, worksheet.results_g587, 0.002); end
  def test_results_h587; assert_in_epsilon(6.666666666666666, worksheet.results_h587, 0.002); end
  def test_results_i587; assert_in_epsilon(7.333333333333332, worksheet.results_i587, 0.002); end
  def test_results_j587; assert_in_epsilon(7.999999999999999, worksheet.results_j587, 0.002); end
  def test_results_k587; assert_in_epsilon(10.666666666666664, worksheet.results_k587, 0.002); end
  def test_results_l587; assert_in_epsilon(13.333333333333332, worksheet.results_l587, 0.002); end
  def test_results_m587; assert_in_epsilon(15.999999999999998, worksheet.results_m587, 0.002); end
  def test_results_n587; assert_in_epsilon(15.999999999999998, worksheet.results_n587, 0.002); end
  def test_results_o587; assert_in_epsilon(15.999999999999998, worksheet.results_o587, 0.002); end
  def test_results_p587; assert_in_epsilon(15.999999999999998, worksheet.results_p587, 0.002); end
  def test_results_q587; assert_in_epsilon(15.999999999999998, worksheet.results_q587, 0.002); end
  def test_results_r587; assert_in_epsilon(15.999999999999998, worksheet.results_r587, 0.002); end
  def test_results_s587; assert_in_epsilon(15.999999999999998, worksheet.results_s587, 0.002); end
  def test_results_t587; assert_in_epsilon(15.999999999999998, worksheet.results_t587, 0.002); end
  def test_results_u587; assert_in_epsilon(15.999999999999998, worksheet.results_u587, 0.002); end
  def test_results_v587; assert_in_epsilon(15.999999999999998, worksheet.results_v587, 0.002); end
  def test_results_w587; assert_in_epsilon(15.999999999999998, worksheet.results_w587, 0.002); end
  def test_results_e588; assert_equal("Wind Offshore", worksheet.results_e588.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f588; assert_in_epsilon(2.0, worksheet.results_f588, 0.002); end
  def test_results_g588; assert_in_epsilon(2.0, worksheet.results_g588, 0.002); end
  def test_results_h588; assert_in_epsilon(5.333333333333332, worksheet.results_h588, 0.002); end
  def test_results_i588; assert_in_epsilon(8.166666666666666, worksheet.results_i588, 0.002); end
  def test_results_j588; assert_in_epsilon(9.999999999999998, worksheet.results_j588, 0.002); end
  def test_results_k588; assert_in_epsilon(13.333333333333332, worksheet.results_k588, 0.002); end
  def test_results_l588; assert_in_epsilon(16.66666666666666, worksheet.results_l588, 0.002); end
  def test_results_m588; assert_in_epsilon(19.999999999999996, worksheet.results_m588, 0.002); end
  def test_results_n588; assert_in_epsilon(19.999999999999996, worksheet.results_n588, 0.002); end
  def test_results_o588; assert_in_epsilon(19.999999999999996, worksheet.results_o588, 0.002); end
  def test_results_p588; assert_in_epsilon(19.999999999999996, worksheet.results_p588, 0.002); end
  def test_results_q588; assert_in_epsilon(19.999999999999996, worksheet.results_q588, 0.002); end
  def test_results_r588; assert_in_epsilon(19.999999999999996, worksheet.results_r588, 0.002); end
  def test_results_s588; assert_in_epsilon(19.999999999999996, worksheet.results_s588, 0.002); end
  def test_results_t588; assert_in_epsilon(19.999999999999996, worksheet.results_t588, 0.002); end
  def test_results_u588; assert_in_epsilon(19.999999999999996, worksheet.results_u588, 0.002); end
  def test_results_v588; assert_in_epsilon(19.999999999999996, worksheet.results_v588, 0.002); end
  def test_results_w588; assert_in_epsilon(19.999999999999996, worksheet.results_w588, 0.002); end
  def test_results_e589; assert_equal("Solar", worksheet.results_e589.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f589; assert_in_epsilon(1.6, worksheet.results_f589, 0.002); end
  def test_results_g589; assert_in_epsilon(1.5, worksheet.results_g589, 0.002); end
  def test_results_h589; assert_in_epsilon(1.733333333333333, worksheet.results_h589, 0.002); end
  def test_results_i589; assert_in_epsilon(2.0666666666666664, worksheet.results_i589, 0.002); end
  def test_results_j589; assert_in_epsilon(2.3999999999999995, worksheet.results_j589, 0.002); end
  def test_results_k589; assert_in_epsilon(2.733333333333333, worksheet.results_k589, 0.002); end
  def test_results_l589; assert_in_epsilon(3.066666666666666, worksheet.results_l589, 0.002); end
  def test_results_m589; assert_in_epsilon(2.0, worksheet.results_m589, 0.002); end
  def test_results_n589; assert_in_epsilon(2.0, worksheet.results_n589, 0.002); end
  def test_results_o589; assert_in_epsilon(2.0, worksheet.results_o589, 0.002); end
  def test_results_p589; assert_in_epsilon(2.0, worksheet.results_p589, 0.002); end
  def test_results_q589; assert_in_epsilon(2.0, worksheet.results_q589, 0.002); end
  def test_results_r589; assert_in_epsilon(2.0, worksheet.results_r589, 0.002); end
  def test_results_s589; assert_in_epsilon(2.0, worksheet.results_s589, 0.002); end
  def test_results_t589; assert_in_epsilon(2.0, worksheet.results_t589, 0.002); end
  def test_results_u589; assert_in_epsilon(2.0, worksheet.results_u589, 0.002); end
  def test_results_v589; assert_in_epsilon(2.0, worksheet.results_v589, 0.002); end
  def test_results_w589; assert_in_epsilon(2.0, worksheet.results_w589, 0.002); end
  def test_results_e590; assert_equal("Tidal & Wave", worksheet.results_e590.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f590; assert_in_delta(0.0, (worksheet.results_f590||0), 0.002); end
  def test_results_g590; assert_in_delta(0.0, (worksheet.results_g590||0), 0.002); end
  def test_results_h590; assert_in_delta(0.9999999999999998, worksheet.results_h590, 0.002); end
  def test_results_i590; assert_in_epsilon(1.9999999999999996, worksheet.results_i590, 0.002); end
  def test_results_j590; assert_in_epsilon(2.999999999999999, worksheet.results_j590, 0.002); end
  def test_results_k590; assert_in_epsilon(3.999999999999999, worksheet.results_k590, 0.002); end
  def test_results_l590; assert_in_epsilon(5.0, worksheet.results_l590, 0.002); end
  def test_results_m590; assert_in_epsilon(5.999999999999998, worksheet.results_m590, 0.002); end
  def test_results_n590; assert_in_epsilon(5.999999999999998, worksheet.results_n590, 0.002); end
  def test_results_o590; assert_in_epsilon(5.999999999999998, worksheet.results_o590, 0.002); end
  def test_results_p590; assert_in_epsilon(5.999999999999998, worksheet.results_p590, 0.002); end
  def test_results_q590; assert_in_epsilon(5.999999999999998, worksheet.results_q590, 0.002); end
  def test_results_r590; assert_in_epsilon(5.999999999999998, worksheet.results_r590, 0.002); end
  def test_results_s590; assert_in_epsilon(5.999999999999998, worksheet.results_s590, 0.002); end
  def test_results_t590; assert_in_epsilon(5.999999999999998, worksheet.results_t590, 0.002); end
  def test_results_u590; assert_in_epsilon(5.999999999999998, worksheet.results_u590, 0.002); end
  def test_results_v590; assert_in_epsilon(5.999999999999998, worksheet.results_v590, 0.002); end
  def test_results_w590; assert_in_epsilon(5.999999999999998, worksheet.results_w590, 0.002); end
  def test_results_e591; assert_equal("Other Renewbles", worksheet.results_e591.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f591; assert_in_epsilon(4.5, worksheet.results_f591, 0.002); end
  def test_results_g591; assert_in_epsilon(4.5, worksheet.results_g591, 0.002); end
  def test_results_h591; assert_in_epsilon(4.5, worksheet.results_h591, 0.002); end
  def test_results_i591; assert_in_epsilon(3.3, worksheet.results_i591, 0.002); end
  def test_results_j591; assert_in_epsilon(3.3, worksheet.results_j591, 0.002); end
  def test_results_k591; assert_in_epsilon(3.3, worksheet.results_k591, 0.002); end
  def test_results_l591; assert_in_epsilon(3.3, worksheet.results_l591, 0.002); end
  def test_results_m591; assert_in_epsilon(3.3, worksheet.results_m591, 0.002); end
  def test_results_n591; assert_in_epsilon(3.3, worksheet.results_n591, 0.002); end
  def test_results_o591; assert_in_epsilon(1.5000000000000002, worksheet.results_o591, 0.002); end
  def test_results_p591; assert_in_epsilon(1.5000000000000002, worksheet.results_p591, 0.002); end
  def test_results_q591; assert_in_epsilon(1.5000000000000002, worksheet.results_q591, 0.002); end
  def test_results_r591; assert_in_epsilon(1.5, worksheet.results_r591, 0.002); end
  def test_results_s591; assert_in_epsilon(1.5, worksheet.results_s591, 0.002); end
  def test_results_t591; assert_in_epsilon(1.5000000000000002, worksheet.results_t591, 0.002); end
  def test_results_u591; assert_in_epsilon(1.5000000000000002, worksheet.results_u591, 0.002); end
  def test_results_v591; assert_in_epsilon(1.5000000000000002, worksheet.results_v591, 0.002); end
  def test_results_w591; assert_in_epsilon(1.5000000000000002, worksheet.results_w591, 0.002); end
  def test_results_e526; assert_equal("Fossil Fuel", worksheet.results_e526.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f526; assert_in_epsilon(241.47548240108796, worksheet.results_f526, 0.002); end
  def test_results_g526; assert_in_epsilon(249.62729132125457, worksheet.results_g526, 0.002); end
  def test_results_h526; assert_in_epsilon(251.72226659141342, worksheet.results_h526, 0.002); end
  def test_results_i526; assert_in_epsilon(244.51162741174724, worksheet.results_i526, 0.002); end
  def test_results_j526; assert_in_epsilon(271.2342418942791, worksheet.results_j526, 0.002); end
  def test_results_k526; assert_in_epsilon(274.8909939282381, worksheet.results_k526, 0.002); end
  def test_results_l526; assert_in_epsilon(240.85409434318953, worksheet.results_l526, 0.002); end
  def test_results_m526; assert_in_epsilon(172.7896088928918, worksheet.results_m526, 0.002); end
  def test_results_n526; assert_in_epsilon(211.17332363575292, worksheet.results_n526, 0.002); end
  def test_results_o526; assert_in_epsilon(248.42564131361553, worksheet.results_o526, 0.002); end
  def test_results_p526; assert_in_epsilon(251.72135317015756, worksheet.results_p526, 0.002); end
  def test_results_q526; assert_in_epsilon(255.24233461677017, worksheet.results_q526, 0.002); end
  def test_results_r526; assert_in_epsilon(262.5545728941863, worksheet.results_r526, 0.002); end
  def test_results_s526; assert_in_epsilon(269.9841454037849, worksheet.results_s526, 0.002); end
  def test_results_t526; assert_in_epsilon(277.3880949965715, worksheet.results_t526, 0.002); end
  def test_results_u526; assert_in_epsilon(284.8205051506565, worksheet.results_u526, 0.002); end
  def test_results_v526; assert_in_epsilon(291.8898639346455, worksheet.results_v526, 0.002); end
  def test_results_w526; assert_in_epsilon(299.17882432036777, worksheet.results_w526, 0.002); end
  def test_results_e527; assert_equal("Nuclear", worksheet.results_e527.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f527; assert_in_epsilon(62.008473986199114, worksheet.results_f527, 0.002); end
  def test_results_g527; assert_in_epsilon(54.092579151642866, worksheet.results_g527, 0.002); end
  def test_results_h527; assert_in_epsilon(67.45248879918904, worksheet.results_h527, 0.002); end
  def test_results_i527; assert_in_epsilon(108.80054917229447, worksheet.results_i527, 0.002); end
  def test_results_j527; assert_in_epsilon(149.78483082672815, worksheet.results_j527, 0.002); end
  def test_results_k527; assert_in_epsilon(190.918137436062, worksheet.results_k527, 0.002); end
  def test_results_l527; assert_in_epsilon(232.52464570086767, worksheet.results_l527, 0.002); end
  def test_results_m527; assert_in_epsilon(275.1603593950432, worksheet.results_m527, 0.002); end
  def test_results_n527; assert_in_epsilon(273.7364534337893, worksheet.results_n527, 0.002); end
  def test_results_o527; assert_in_epsilon(273.7501827318159, worksheet.results_o527, 0.002); end
  def test_results_p527; assert_in_epsilon(273.706237912385, worksheet.results_p527, 0.002); end
  def test_results_q527; assert_in_epsilon(273.5971085939215, worksheet.results_q527, 0.002); end
  def test_results_r527; assert_in_epsilon(273.57101254192423, worksheet.results_r527, 0.002); end
  def test_results_s527; assert_in_epsilon(273.54327744667034, worksheet.results_s527, 0.002); end
  def test_results_t527; assert_in_epsilon(273.53285054647586, worksheet.results_t527, 0.002); end
  def test_results_u527; assert_in_epsilon(273.5229163155353, worksheet.results_u527, 0.002); end
  def test_results_v527; assert_in_epsilon(273.5075279488801, worksheet.results_v527, 0.002); end
  def test_results_w527; assert_in_epsilon(273.4252423237401, worksheet.results_w527, 0.002); end
  def test_results_e528; assert_equal("Gas CCS", worksheet.results_e528.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f528; assert_in_delta(0.0, (worksheet.results_f528||0), 0.002); end
  def test_results_g528; assert_in_delta(0.0, (worksheet.results_g528||0), 0.002); end
  def test_results_h528; assert_in_epsilon(2.5404770639132126, worksheet.results_h528, 0.002); end
  def test_results_i528; assert_in_epsilon(5.045367593521487, worksheet.results_i528, 0.002); end
  def test_results_j528; assert_in_epsilon(7.614457057391285, worksheet.results_j528, 0.002); end
  def test_results_k528; assert_in_epsilon(10.196197703088998, worksheet.results_k528, 0.002); end
  def test_results_l528; assert_in_epsilon(12.806728013976112, worksheet.results_l528, 0.002); end
  def test_results_m528; assert_in_epsilon(15.477770215971182, worksheet.results_m528, 0.002); end
  def test_results_n528; assert_in_epsilon(15.39767550565065, worksheet.results_n528, 0.002); end
  def test_results_o528; assert_in_epsilon(15.398447778664648, worksheet.results_o528, 0.002); end
  def test_results_p528; assert_in_epsilon(15.395975882571657, worksheet.results_p528, 0.002); end
  def test_results_q528; assert_in_epsilon(15.389837358408085, worksheet.results_q528, 0.002); end
  def test_results_r528; assert_in_epsilon(15.388369455483236, worksheet.results_r528, 0.002); end
  def test_results_s528; assert_in_epsilon(15.386809356375206, worksheet.results_s528, 0.002); end
  def test_results_t528; assert_in_epsilon(15.386222843239267, worksheet.results_t528, 0.002); end
  def test_results_u528; assert_in_epsilon(15.38566404274886, worksheet.results_u528, 0.002); end
  def test_results_v528; assert_in_epsilon(15.384798447124506, worksheet.results_v528, 0.002); end
  def test_results_w528; assert_in_epsilon(15.380169880710383, worksheet.results_w528, 0.002); end
  def test_results_e529; assert_equal("Biomass CCS", worksheet.results_e529.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f529; assert_in_delta(0.0, (worksheet.results_f529||0), 0.002); end
  def test_results_g529; assert_in_delta(0.0, (worksheet.results_g529||0), 0.002); end
  def test_results_h529; assert_in_epsilon(2.5404770639132126, worksheet.results_h529, 0.002); end
  def test_results_i529; assert_in_epsilon(5.045367593521487, worksheet.results_i529, 0.002); end
  def test_results_j529; assert_in_epsilon(9.182431191733249, worksheet.results_j529, 0.002); end
  def test_results_k529; assert_in_epsilon(13.134077915552865, worksheet.results_k529, 0.002); end
  def test_results_l529; assert_in_epsilon(16.918792502168987, worksheet.results_l529, 0.002); end
  def test_results_m529; assert_in_epsilon(20.82870695169617, worksheet.results_m529, 0.002); end
  def test_results_n529; assert_in_epsilon(21.82206394947867, worksheet.results_n529, 0.002); end
  def test_results_o529; assert_in_epsilon(22.781269842046363, worksheet.results_o529, 0.002); end
  def test_results_p529; assert_in_epsilon(22.62316911911715, worksheet.results_p529, 0.002); end
  def test_results_q529; assert_in_epsilon(22.502401103002963, worksheet.results_q529, 0.002); end
  def test_results_r529; assert_in_epsilon(22.316772661686098, worksheet.results_r529, 0.002); end
  def test_results_s529; assert_in_epsilon(22.15372150887955, worksheet.results_s529, 0.002); end
  def test_results_t529; assert_in_epsilon(22.010548144375548, worksheet.results_t529, 0.002); end
  def test_results_u529; assert_in_epsilon(21.881369965234505, worksheet.results_u529, 0.002); end
  def test_results_v529; assert_in_epsilon(21.861621363791173, worksheet.results_v529, 0.002); end
  def test_results_w529; assert_in_epsilon(21.85699279737705, worksheet.results_w529, 0.002); end
  def test_results_e530; assert_equal("Wind Onshore", worksheet.results_e530.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f530; assert_in_epsilon(10.280460885822023, worksheet.results_f530, 0.002); end
  def test_results_g530; assert_in_epsilon(10.023944787910716, worksheet.results_g530, 0.002); end
  def test_results_h530; assert_in_epsilon(16.75001834589522, worksheet.results_h530, 0.002); end
  def test_results_i530; assert_in_epsilon(18.25104156832727, worksheet.results_i530, 0.002); end
  def test_results_j530; assert_in_epsilon(20.07522509294679, worksheet.results_j530, 0.002); end
  def test_results_k530; assert_in_epsilon(26.921947388760884, worksheet.results_k530, 0.002); end
  def test_results_l530; assert_in_epsilon(33.871032938581735, worksheet.results_l530, 0.002); end
  def test_results_m530; assert_in_epsilon(41.03527187900865, worksheet.results_m530, 0.002); end
  def test_results_n530; assert_in_epsilon(40.750490686757864, worksheet.results_n530, 0.002); end
  def test_results_o530; assert_in_epsilon(40.75323654636319, worksheet.results_o530, 0.002); end
  def test_results_p530; assert_in_epsilon(40.744447582477, worksheet.results_p530, 0.002); end
  def test_results_q530; assert_in_epsilon(40.7226217187843, worksheet.results_q530, 0.002); end
  def test_results_r530; assert_in_epsilon(40.71740250838484, worksheet.results_r530, 0.002); end
  def test_results_s530; assert_in_epsilon(40.71185548933407, worksheet.results_s530, 0.002); end
  def test_results_t530; assert_in_epsilon(40.70977010929517, worksheet.results_t530, 0.002); end
  def test_results_u530; assert_in_epsilon(40.70778326310706, worksheet.results_u530, 0.002); end
  def test_results_v530; assert_in_epsilon(40.70470558977602, worksheet.results_v530, 0.002); end
  def test_results_w530; assert_in_epsilon(40.68824846474803, worksheet.results_w530, 0.002); end
  def test_results_e531; assert_equal("Wind Offshore", worksheet.results_e531.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f531; assert_in_epsilon(5.140230442911012, worksheet.results_f531, 0.002); end
  def test_results_g531; assert_in_epsilon(5.011972393955358, worksheet.results_g531, 0.002); end
  def test_results_h531; assert_in_epsilon(13.400014676716175, worksheet.results_h531, 0.002); end
  def test_results_i531; assert_in_epsilon(20.3250235647281, worksheet.results_i531, 0.002); end
  def test_results_j531; assert_in_epsilon(25.094031366183486, worksheet.results_j531, 0.002); end
  def test_results_k531; assert_in_epsilon(33.652434235951105, worksheet.results_k531, 0.002); end
  def test_results_l531; assert_in_epsilon(42.33879117322715, worksheet.results_l531, 0.002); end
  def test_results_m531; assert_in_epsilon(51.294089848760805, worksheet.results_m531, 0.002); end
  def test_results_n531; assert_in_epsilon(50.938113358447325, worksheet.results_n531, 0.002); end
  def test_results_o531; assert_in_epsilon(50.941545682953986, worksheet.results_o531, 0.002); end
  def test_results_p531; assert_in_epsilon(50.93055947809625, worksheet.results_p531, 0.002); end
  def test_results_q531; assert_in_epsilon(50.90327714848038, worksheet.results_q531, 0.002); end
  def test_results_r531; assert_in_epsilon(50.89675313548105, worksheet.results_r531, 0.002); end
  def test_results_s531; assert_in_epsilon(50.889819361667584, worksheet.results_s531, 0.002); end
  def test_results_t531; assert_in_epsilon(50.88721263661896, worksheet.results_t531, 0.002); end
  def test_results_u531; assert_in_epsilon(50.88472907888382, worksheet.results_u531, 0.002); end
  def test_results_v531; assert_in_epsilon(50.88088198722002, worksheet.results_v531, 0.002); end
  def test_results_w531; assert_in_epsilon(50.86031058093503, worksheet.results_w531, 0.002); end
  def test_results_e532; assert_equal("Solar", worksheet.results_e532.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f532; assert_in_epsilon(1.5266196531493215, worksheet.results_f532, 0.002); end
  def test_results_g532; assert_in_epsilon(1.416776894319978, worksheet.results_g532, 0.002); end
  def test_results_h532; assert_in_epsilon(1.6388587154899135, worksheet.results_h532, 0.002); end
  def test_results_i532; assert_in_epsilon(1.9466693026611073, worksheet.results_i532, 0.002); end
  def test_results_j532; assert_in_epsilon(2.2680731291826053, worksheet.results_j532, 0.002); end
  def test_results_k532; assert_in_epsilon(2.5890403527554966, worksheet.results_k532, 0.002); end
  def test_results_l532; assert_in_epsilon(2.9123186363810696, worksheet.results_l532, 0.002); end
  def test_results_m532; assert_in_epsilon(1.9066513477314122, worksheet.results_m532, 0.002); end
  def test_results_n532; assert_in_epsilon(1.9013117003767102, worksheet.results_n532, 0.002); end
  def test_results_o532; assert_in_epsilon(1.90136318524431, worksheet.results_o532, 0.002); end
  def test_results_p532; assert_in_epsilon(1.901198392171444, worksheet.results_p532, 0.002); end
  def test_results_q532; assert_in_epsilon(1.900789157227206, worksheet.results_q532, 0.002); end
  def test_results_r532; assert_in_epsilon(1.9006912970322158, worksheet.results_r532, 0.002); end
  def test_results_s532; assert_in_epsilon(1.900587290425014, worksheet.results_s532, 0.002); end
  def test_results_t532; assert_in_epsilon(1.9005481895492846, worksheet.results_t532, 0.002); end
  def test_results_u532; assert_in_epsilon(1.9005109361832575, worksheet.results_u532, 0.002); end
  def test_results_v532; assert_in_epsilon(1.9004532298083006, worksheet.results_v532, 0.002); end
  def test_results_w532; assert_in_epsilon(1.9001446587140256, worksheet.results_w532, 0.002); end
  def test_results_e533; assert_equal("Tidal & Wave", worksheet.results_e533.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f533; assert_in_delta(0.0, (worksheet.results_f533||0), 0.002); end
  def test_results_g533; assert_in_delta(0.0, (worksheet.results_g533||0), 0.002); end
  def test_results_h533; assert_in_epsilon(2.540477063913212, worksheet.results_h533, 0.002); end
  def test_results_i533; assert_in_epsilon(5.045367593521487, worksheet.results_i533, 0.002); end
  def test_results_j533; assert_in_epsilon(7.614457057391284, worksheet.results_j533, 0.002); end
  def test_results_k533; assert_in_epsilon(10.196197703088998, worksheet.results_k533, 0.002); end
  def test_results_l533; assert_in_epsilon(12.806728013976112, worksheet.results_l533, 0.002); end
  def test_results_m533; assert_in_epsilon(15.47777021597118, worksheet.results_m533, 0.002); end
  def test_results_n533; assert_in_epsilon(15.397675505650648, worksheet.results_n533, 0.002); end
  def test_results_o533; assert_in_epsilon(15.398447778664647, worksheet.results_o533, 0.002); end
  def test_results_p533; assert_in_epsilon(15.395975882571657, worksheet.results_p533, 0.002); end
  def test_results_q533; assert_in_epsilon(15.389837358408085, worksheet.results_q533, 0.002); end
  def test_results_r533; assert_in_epsilon(15.388369455483236, worksheet.results_r533, 0.002); end
  def test_results_s533; assert_in_epsilon(15.386809356375208, worksheet.results_s533, 0.002); end
  def test_results_t533; assert_in_epsilon(15.386222843239267, worksheet.results_t533, 0.002); end
  def test_results_u533; assert_in_epsilon(15.385664042748859, worksheet.results_u533, 0.002); end
  def test_results_v533; assert_in_epsilon(15.384798447124503, worksheet.results_v533, 0.002); end
  def test_results_w533; assert_in_epsilon(15.38016988071038, worksheet.results_w533, 0.002); end
  def test_results_e534; assert_equal("Other Renewbles", worksheet.results_e534.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f534; assert_in_epsilon(63.55102101001474, worksheet.results_f534, 0.002); end
  def test_results_g534; assert_in_epsilon(83.93252689803668, worksheet.results_g534, 0.002); end
  def test_results_h534; assert_in_epsilon(86.53560912065194, worksheet.results_h534, 0.002); end
  def test_results_i534; assert_in_epsilon(81.5294182922757, worksheet.results_i534, 0.002); end
  def test_results_j534; assert_in_epsilon(66.57554911570435, worksheet.results_j534, 0.002); end
  def test_results_k534; assert_in_epsilon(45.82195266870805, worksheet.results_k534, 0.002); end
  def test_results_l534; assert_in_epsilon(40.85059879792871, worksheet.results_l534, 0.002); end
  def test_results_m534; assert_in_epsilon(38.650531336205205, worksheet.results_m534, 0.002); end
  def test_results_n534; assert_in_epsilon(35.97136109555277, worksheet.results_n534, 0.002); end
  def test_results_o534; assert_in_epsilon(33.38090019819302, worksheet.results_o534, 0.002); end
  def test_results_p534; assert_in_epsilon(32.757766916824885, worksheet.results_p534, 0.002); end
  def test_results_q534; assert_in_epsilon(32.29771431798154, worksheet.results_q534, 0.002); end
  def test_results_r534; assert_in_epsilon(31.560705188682263, worksheet.results_r534, 0.002); end
  def test_results_s534; assert_in_epsilon(30.91435094911117, worksheet.results_s534, 0.002); end
  def test_results_t534; assert_in_epsilon(30.343856915354937, worksheet.results_t534, 0.002); end
  def test_results_u534; assert_in_epsilon(29.829239700629795, worksheet.results_u534, 0.002); end
  def test_results_v534; assert_in_epsilon(29.753491278447793, worksheet.results_v534, 0.002); end
  def test_results_w534; assert_in_epsilon(29.75233413684426, worksheet.results_w534, 0.002); end
  def test_results_e535; assert_equal("Interconnectors", worksheet.results_e535.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f535; assert_in_epsilon(29.473949533329105, worksheet.results_f535, 0.002); end
  def test_results_g535; assert_in_epsilon(24.104396225314275, worksheet.results_g535, 0.002); end
  def test_results_h535; assert_in_epsilon(19.320686469793998, worksheet.results_h535, 0.002); end
  def test_results_i535; assert_in_epsilon(14.389024622180832, worksheet.results_i535, 0.002); end
  def test_results_j535; assert_in_epsilon(9.651503355630702, worksheet.results_j535, 0.002); end
  def test_results_k535; assert_in_epsilon(4.846470122770267, worksheet.results_k535, 0.002); end
  def test_results_l535; assert_in_delta(0.0, (worksheet.results_l535||0), 0.002); end
  def test_results_m535; assert_in_delta(0.0, (worksheet.results_m535||0), 0.002); end
  def test_results_n535; assert_in_delta(0.0, (worksheet.results_n535||0), 0.002); end
  def test_results_o535; assert_in_delta(0.0, (worksheet.results_o535||0), 0.002); end
  def test_results_p535; assert_in_delta(0.0, (worksheet.results_p535||0), 0.002); end
  def test_results_q535; assert_in_delta(0.0, (worksheet.results_q535||0), 0.002); end
  def test_results_r535; assert_in_delta(0.0, (worksheet.results_r535||0), 0.002); end
  def test_results_s535; assert_in_delta(0.0, (worksheet.results_s535||0), 0.002); end
  def test_results_t535; assert_in_delta(0.0, (worksheet.results_t535||0), 0.002); end
  def test_results_u535; assert_in_delta(0.0, (worksheet.results_u535||0), 0.002); end
  def test_results_v535; assert_in_delta(0.0, (worksheet.results_v535||0), 0.002); end
  def test_results_w535; assert_in_delta(0.0, (worksheet.results_w535||0), 0.002); end
  def test_results_e644; assert_equal("Hydrogen", worksheet.results_e644.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f644; assert_in_delta(0.0, (worksheet.results_f644||0), 0.002); end
  def test_results_g644; assert_in_delta(0.0, (worksheet.results_g644||0), 0.002); end
  def test_results_h644; assert_in_delta(0.08333333333333333, worksheet.results_h644, 0.002); end
  def test_results_i644; assert_in_delta(0.16666666666666666, worksheet.results_i644, 0.002); end
  def test_results_j644; assert_in_delta(0.25, worksheet.results_j644, 0.002); end
  def test_results_k644; assert_in_delta(0.3333333333333333, worksheet.results_k644, 0.002); end
  def test_results_l644; assert_in_delta(0.4166666666666667, worksheet.results_l644, 0.002); end
  def test_results_m644; assert_in_delta(0.5, worksheet.results_m644, 0.002); end
  def test_results_n644; assert_in_delta(0.5, worksheet.results_n644, 0.002); end
  def test_results_o644; assert_in_delta(0.5, worksheet.results_o644, 0.002); end
  def test_results_p644; assert_in_delta(0.5, worksheet.results_p644, 0.002); end
  def test_results_q644; assert_in_delta(0.5, worksheet.results_q644, 0.002); end
  def test_results_r644; assert_in_delta(0.5, worksheet.results_r644, 0.002); end
  def test_results_s644; assert_in_delta(0.5, worksheet.results_s644, 0.002); end
  def test_results_t644; assert_in_delta(0.5, worksheet.results_t644, 0.002); end
  def test_results_u644; assert_in_delta(0.5, worksheet.results_u644, 0.002); end
  def test_results_v644; assert_in_delta(0.5, worksheet.results_v644, 0.002); end
  def test_results_w644; assert_in_delta(0.5, worksheet.results_w644, 0.002); end
  def test_results_e645; assert_equal("Electric", worksheet.results_e645.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f645; assert_in_delta(0.01, worksheet.results_f645, 0.002); end
  def test_results_g645; assert_in_delta(0.01, worksheet.results_g645, 0.002); end
  def test_results_h645; assert_in_delta(0.1325, worksheet.results_h645, 0.002); end
  def test_results_i645; assert_in_delta(0.255, worksheet.results_i645, 0.002); end
  def test_results_j645; assert_in_delta(0.3775, worksheet.results_j645, 0.002); end
  def test_results_k645; assert_in_delta(0.5, worksheet.results_k645, 0.002); end
  def test_results_l645; assert_in_delta(0.5, worksheet.results_l645, 0.002); end
  def test_results_m645; assert_in_delta(0.5, worksheet.results_m645, 0.002); end
  def test_results_n645; assert_in_delta(0.5, worksheet.results_n645, 0.002); end
  def test_results_o645; assert_in_delta(0.5, worksheet.results_o645, 0.002); end
  def test_results_p645; assert_in_delta(0.5, worksheet.results_p645, 0.002); end
  def test_results_q645; assert_in_delta(0.5, worksheet.results_q645, 0.002); end
  def test_results_r645; assert_in_delta(0.5, worksheet.results_r645, 0.002); end
  def test_results_s645; assert_in_delta(0.5, worksheet.results_s645, 0.002); end
  def test_results_t645; assert_in_delta(0.5, worksheet.results_t645, 0.002); end
  def test_results_u645; assert_in_delta(0.5, worksheet.results_u645, 0.002); end
  def test_results_v645; assert_in_delta(0.5, worksheet.results_v645, 0.002); end
  def test_results_w645; assert_in_delta(0.5, worksheet.results_w645, 0.002); end
  def test_results_e646; assert_equal("Plug-in Hybrid Electric", worksheet.results_e646.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f646; assert_in_delta(0.02, worksheet.results_f646, 0.002); end
  def test_results_g646; assert_in_delta(0.02, worksheet.results_g646, 0.002); end
  def test_results_h646; assert_in_delta(0.15, worksheet.results_h646, 0.002); end
  def test_results_i646; assert_in_delta(0.28, worksheet.results_i646, 0.002); end
  def test_results_j646; assert_in_delta(0.37250000000000005, worksheet.results_j646, 0.002); end
  def test_results_k646; assert_in_delta(0.16666666666666669, worksheet.results_k646, 0.002); end
  def test_results_l646; assert_in_delta(0.08333333333333331, worksheet.results_l646, 0.002); end
  def test_results_m646; assert_in_delta(0.0, (worksheet.results_m646||0), 0.002); end
  def test_results_n646; assert_in_delta(0.0, (worksheet.results_n646||0), 0.002); end
  def test_results_o646; assert_in_delta(0.0, (worksheet.results_o646||0), 0.002); end
  def test_results_p646; assert_in_delta(0.0, (worksheet.results_p646||0), 0.002); end
  def test_results_q646; assert_in_delta(0.0, (worksheet.results_q646||0), 0.002); end
  def test_results_r646; assert_in_delta(0.0, (worksheet.results_r646||0), 0.002); end
  def test_results_s646; assert_in_delta(0.0, (worksheet.results_s646||0), 0.002); end
  def test_results_t646; assert_in_delta(0.0, (worksheet.results_t646||0), 0.002); end
  def test_results_u646; assert_in_delta(0.0, (worksheet.results_u646||0), 0.002); end
  def test_results_v646; assert_in_delta(0.0, (worksheet.results_v646||0), 0.002); end
  def test_results_w646; assert_in_delta(0.0, (worksheet.results_w646||0), 0.002); end
  def test_results_e647; assert_equal("Conventional", worksheet.results_e647.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f647; assert_in_delta(0.97, worksheet.results_f647, 0.002); end
  def test_results_g647; assert_in_delta(0.97, worksheet.results_g647, 0.002); end
  def test_results_h647; assert_in_delta(0.6341666666666665, worksheet.results_h647, 0.002); end
  def test_results_i647; assert_in_delta(0.29833333333333334, worksheet.results_i647, 0.002); end
  def test_results_j647; assert_in_delta(0.0, (worksheet.results_j647||0), 0.002); end
  def test_results_k647; assert_in_delta(0.0, (worksheet.results_k647||0), 0.002); end
  def test_results_l647; assert_in_delta(0.0, (worksheet.results_l647||0), 0.002); end
  def test_results_m647; assert_in_delta(0.0, (worksheet.results_m647||0), 0.002); end
  def test_results_n647; assert_in_delta(0.0, (worksheet.results_n647||0), 0.002); end
  def test_results_o647; assert_in_delta(0.0, (worksheet.results_o647||0), 0.002); end
  def test_results_p647; assert_in_delta(0.0, (worksheet.results_p647||0), 0.002); end
  def test_results_q647; assert_in_delta(0.0, (worksheet.results_q647||0), 0.002); end
  def test_results_r647; assert_in_delta(0.0, (worksheet.results_r647||0), 0.002); end
  def test_results_s647; assert_in_delta(0.0, (worksheet.results_s647||0), 0.002); end
  def test_results_t647; assert_in_delta(0.0, (worksheet.results_t647||0), 0.002); end
  def test_results_u647; assert_in_delta(0.0, (worksheet.results_u647||0), 0.002); end
  def test_results_v647; assert_in_delta(0.0, (worksheet.results_v647||0), 0.002); end
  def test_results_w647; assert_in_delta(0.0, (worksheet.results_w647||0), 0.002); end
  def test_results_e689; assert_equal("Electricity ", worksheet.results_e689.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f689; assert_in_epsilon(8.172120758330962, worksheet.results_f689, 0.002); end
  def test_results_g689; assert_in_epsilon(8.26148824841383, worksheet.results_g689, 0.002); end
  def test_results_h689; assert_in_epsilon(28.4618926506027, worksheet.results_h689, 0.002); end
  def test_results_i689; assert_in_epsilon(49.01760049941427, worksheet.results_i689, 0.002); end
  def test_results_j689; assert_in_epsilon(68.67079785727623, worksheet.results_j689, 0.002); end
  def test_results_k689; assert_in_epsilon(71.70297758222762, worksheet.results_k689, 0.002); end
  def test_results_l689; assert_in_epsilon(69.4436907757069, worksheet.results_l689, 0.002); end
  def test_results_m689; assert_in_epsilon(67.03608196686832, worksheet.results_m689, 0.002); end
  def test_results_n689; assert_in_epsilon(67.84600265545374, worksheet.results_n689, 0.002); end
  def test_results_o689; assert_in_epsilon(68.6132751819221, worksheet.results_o689, 0.002); end
  def test_results_p689; assert_in_epsilon(69.3809916311615, worksheet.results_p689, 0.002); end
  def test_results_q689; assert_in_epsilon(70.19361733869633, worksheet.results_q689, 0.002); end
  def test_results_r689; assert_in_epsilon(71.05929522263642, worksheet.results_r689, 0.002); end
  def test_results_s689; assert_in_epsilon(71.9503838155992, worksheet.results_s689, 0.002); end
  def test_results_t689; assert_in_epsilon(72.84156713685203, worksheet.results_t689, 0.002); end
  def test_results_u689; assert_in_epsilon(73.7327021652511, worksheet.results_u689, 0.002); end
  def test_results_v689; assert_in_epsilon(74.63798823807839, worksheet.results_v689, 0.002); end
  def test_results_w689; assert_in_epsilon(75.56217601003712, worksheet.results_w689, 0.002); end
  def test_results_e690; assert_equal("Hydrogen Gaseous ", worksheet.results_e690.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f690; assert_in_delta(0.0, (worksheet.results_f690||0), 0.002); end
  def test_results_g690; assert_in_delta(0.0, (worksheet.results_g690||0), 0.002); end
  def test_results_h690; assert_in_epsilon(24.08324844803424, worksheet.results_h690, 0.002); end
  def test_results_i690; assert_in_epsilon(45.658515772190164, worksheet.results_i690, 0.002); end
  def test_results_j690; assert_in_epsilon(68.13111261201458, worksheet.results_j690, 0.002); end
  def test_results_k690; assert_in_epsilon(89.65505217421071, worksheet.results_k690, 0.002); end
  def test_results_l690; assert_in_epsilon(111.16297007163408, worksheet.results_l690, 0.002); end
  def test_results_m690; assert_in_epsilon(132.2739607700418, worksheet.results_m690, 0.002); end
  def test_results_n690; assert_in_epsilon(133.6744384853355, worksheet.results_n690, 0.002); end
  def test_results_o690; assert_in_epsilon(135.00117095435385, worksheet.results_o690, 0.002); end
  def test_results_p690; assert_in_epsilon(136.32867103427157, worksheet.results_p690, 0.002); end
  def test_results_q690; assert_in_epsilon(137.73382614429218, worksheet.results_q690, 0.002); end
  def test_results_r690; assert_in_epsilon(139.23071664501288, worksheet.results_r690, 0.002); end
  def test_results_s690; assert_in_epsilon(140.77154617855194, worksheet.results_s690, 0.002); end
  def test_results_t690; assert_in_epsilon(142.31253951190638, worksheet.results_t690, 0.002); end
  def test_results_u690; assert_in_epsilon(143.8534493394726, worksheet.results_u690, 0.002); end
  def test_results_v690; assert_in_epsilon(145.41882850415925, worksheet.results_v690, 0.002); end
  def test_results_w690; assert_in_epsilon(147.01689162023507, worksheet.results_w690, 0.002); end
  def test_results_e691; assert_equal("Fossil Fuel Liquid ", worksheet.results_e691.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f691; assert_in_epsilon(670.9290481724032, worksheet.results_f691, 0.002); end
  def test_results_g691; assert_in_epsilon(642.9536578705774, worksheet.results_g691, 0.002); end
  def test_results_h691; assert_in_epsilon(520.7208599508731, worksheet.results_h691, 0.002); end
  def test_results_i691; assert_in_epsilon(407.17885135616507, worksheet.results_i691, 0.002); end
  def test_results_j691; assert_in_epsilon(311.2882526100534, worksheet.results_j691, 0.002); end
  def test_results_k691; assert_in_epsilon(285.0254524634644, worksheet.results_k691, 0.002); end
  def test_results_l691; assert_in_epsilon(276.895713072283, worksheet.results_l691, 0.002); end
  def test_results_m691; assert_in_epsilon(263.20710912253276, worksheet.results_m691, 0.002); end
  def test_results_n691; assert_in_epsilon(266.99733790860085, worksheet.results_n691, 0.002); end
  def test_results_o691; assert_in_epsilon(270.5879838293252, worksheet.results_o691, 0.002); end
  def test_results_p691; assert_in_epsilon(274.18070719897673, worksheet.results_p691, 0.002); end
  def test_results_q691; assert_in_epsilon(277.9835948056346, worksheet.results_q691, 0.002); end
  def test_results_r691; assert_in_epsilon(282.0347534948921, worksheet.results_r691, 0.002); end
  def test_results_s691; assert_in_epsilon(286.20482802636656, worksheet.results_s691, 0.002); end
  def test_results_t691; assert_in_epsilon(290.3753458628422, worksheet.results_t691, 0.002); end
  def test_results_u691; assert_in_epsilon(294.5456377006899, worksheet.results_u691, 0.002); end
  def test_results_v691; assert_in_epsilon(298.78215293139635, worksheet.results_v691, 0.002); end
  def test_results_w691; assert_in_epsilon(303.1071234456428, worksheet.results_w691, 0.002); end
  def test_results_e692; assert_equal("Bioenergy Liquid ", worksheet.results_e692.to_s.gsub(/[\n\r]+/,'')); end
  def test_results_f692; assert_in_epsilon(1.5728227961365546, worksheet.results_f692, 0.002); end
  def test_results_g692; assert_in_epsilon(1.7334930761295322, worksheet.results_g692, 0.002); end
  def test_results_h692; assert_in_epsilon(5.929483925229272, worksheet.results_h692, 0.002); end
  def test_results_i692; assert_in_epsilon(8.21875072952473, worksheet.results_i692, 0.002); end
  def test_results_j692; assert_in_epsilon(9.01570383496548, worksheet.results_j692, 0.002); end
  def test_results_k692; assert_in_epsilon(10.561856595832731, worksheet.results_k692, 0.002); end
  def test_results_l692; assert_in_epsilon(12.433910463190706, worksheet.results_l692, 0.002); end
  def test_results_m692; assert_in_epsilon(13.853005743291199, worksheet.results_m692, 0.002); end
  def test_results_n692; assert_in_epsilon(14.052491468873729, worksheet.results_n692, 0.002); end
  def test_results_o692; assert_in_epsilon(14.24147283312238, worksheet.results_o692, 0.002); end
  def test_results_p692; assert_in_epsilon(14.430563536788252, worksheet.results_p692, 0.002); end
  def test_results_q692; assert_in_epsilon(14.630715516086033, worksheet.results_q692, 0.002); end
  def test_results_r692; assert_in_epsilon(14.843934394468006, worksheet.results_r692, 0.002); end
  def test_results_s692; assert_in_epsilon(15.063412001387716, worksheet.results_s692, 0.002); end
  def test_results_t692; assert_in_epsilon(15.282912940149595, worksheet.results_t692, 0.002); end
  def test_results_u692; assert_in_epsilon(15.50240198424684, worksheet.results_u692, 0.002); end
  def test_results_v692; assert_in_epsilon(15.725376470073495, worksheet.results_v692, 0.002); end
  def test_results_w692; assert_in_epsilon(15.953006497139096, worksheet.results_w692, 0.002); end
end
