map <- openproj(map, g@proj4string)
os <- 5
cc <- cc[cc$lat < g@bbox["y","max"] + os & cc$lat > g@bbox["y","min"] - os &
cc$long < g@bbox["x","max"] + os & cc$long > g@bbox["x","min"] - os, ]
cc$Name[cc$Name=="DELHIMUNICIPALCORPORATION(U)"] <- "Delhi"
# cairo_pdf("icimod_10.pdf", width = 6.5, height = 4)
cairo_pdf("icimod_50.pdf", width = 6.5, height = 4)
plot(map)
#plot(g, lwd=2, add=T, border=adjustcolor("steelblue",.1))
plot(r[r$min_zoom>=1,], lwd=1, add=T, col=adjustcolor("steelblue",.5))
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
# i <- which(cc$pop>5e+06)
i <- which(cc$pop50>5e+06)
text(cc$long[i], cc$lat[i], cc$Name[i], pos=4)
# title("2010")
title("2050")
dev.off()
setwd("/home/kriewald/cluster/pua/")
library(classInt)
library(OpenStreetMap)
library(mapview)
library(rgdal)
cc <- readRDS("paper_data_17_05_19.RDS")
cc$col <- findColours(
classIntervals(
# cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
# Stamen.TerrainBackground
# url <- 'https://stamen-tiles-a.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png'
# Esri.WorldTerrain
url <- 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}'
# Esri.WorldShadedRelief
# url <- 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}'
# Esri.WorldPhysical
# url <- "https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}"
r <- readOGR("../data/natural_earth/ne_10m_rivers_lake_centerlines/ne_10m_rivers_lake_centerlines.shp")
g <- readOGR("/home/kriewald/Downloads/glacial_lake_hkh_2005/data/GlacialLake_5basins_HKH.shp")
# mapview(g)
os <- 10
map <- openmap(g@bbox[c(4,1)]+c(os,-os), g@bbox[c(2,3)]+c(-os,os), typ=url, minNumTiles = 16)
map <- openproj(map, g@proj4string)
os <- 5
cc <- cc[cc$lat < g@bbox["y","max"] + os & cc$lat > g@bbox["y","min"] - os &
cc$long < g@bbox["x","max"] + os & cc$long > g@bbox["x","min"] - os, ]
cc$Name[cc$Name=="DELHIMUNICIPALCORPORATION(U)"] <- "Delhi"
# cairo_pdf("icimod_10.pdf", width = 6.5, height = 4)
cairo_pdf("icimod_50.pdf", width = 6.5, height = 4)
plot(map)
#plot(g, lwd=2, add=T, border=adjustcolor("steelblue",.1))
plot(r[r$min_zoom>=1,], lwd=1, add=T, col=adjustcolor("steelblue",.5))
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
# i <- which(cc$pop>5e+06)
i <- which(cc$pop50>5e+06)
text(cc$long[i], cc$lat[i], cc$Name[i], pos=4)
# title("2010")
title("2050")
dev.off()
plot(map)
#plot(g, lwd=2, add=T, border=adjustcolor("steelblue",.1))
plot(r[r$min_zoom>=1,], lwd=1, add=T, col=adjustcolor("steelblue",.5))
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
cc$long
cc$lat
sqrt(cc$pop/1e+06)
cc$pop
points(cc$long, cc$lat)
points(cc$long, cc$lat, pch=16)
points(cc$long, cc$lat, pch=16),
cex=sqrt(cc$pop/1e+06)
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06)
)
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
adjustcolor(cc$col,0.5)
cc$col
cc <- readRDS("paper_data_17_05_19.RDS")
cc$col <- findColours(
classIntervals(
# cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$cc_M50_8p5_LU_F
classIntervals(
# cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
)
cc$col <- findColours(
classIntervals(
cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
# cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$col <- findColours(
classIntervals(
#cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$col <- findColours(
classIntervals(
#cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50_8p5_LU, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$col <- findColours(
classIntervals(
#cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$cc_M50_8p5_LU_F
cc <- readRDS("paper_data_17_05_19.RDS")
cc <- cc[cc$lat < g@bbox["y","max"] + os & cc$lat > g@bbox["y","min"] - os &
cc$long < g@bbox["x","max"] + os & cc$long > g@bbox["x","min"] - os, ]
cc$col <- findColours(
classIntervals(
#cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$Name[cc$Name=="DELHIMUNICIPALCORPORATION(U)"] <- "Delhi"
# cairo_pdf("icimod_10.pdf", width = 6.5, height = 4)
cairo_pdf("icimod_50.pdf", width = 6.5, height = 4)
plot(map)
#plot(g, lwd=2, add=T, border=adjustcolor("steelblue",.1))
plot(r[r$min_zoom>=1,], lwd=1, add=T, col=adjustcolor("steelblue",.5))
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
# i <- which(cc$pop>5e+06)
i <- which(cc$pop50>5e+06)
text(cc$long[i], cc$lat[i], cc$Name[i], pos=4)
# title("2010")
title("2050")
dev.off()
# cairo_pdf("icimod_10.pdf", width = 6.5, height = 4)
cairo_pdf("icimod_50.pdf", width = 6.5, height = 4)
plot(map)
#plot(g, lwd=2, add=T, border=adjustcolor("steelblue",.1))
plot(r[r$min_zoom>=1,], lwd=1, add=T, col=adjustcolor("steelblue",.5))
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
# i <- which(cc$pop>5e+06)
i <- which(cc$pop50>10e+06)
text(cc$long[i], cc$lat[i], cc$Name[i], pos=4)
# title("2010")
title("2050")
dev.off()
setwd("/home/kriewald/cluster/pua/")
library(classInt)
library(OpenStreetMap)
library(mapview)
library(rgdal)
# Stamen.TerrainBackground
# url <- 'https://stamen-tiles-a.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png'
# Esri.WorldTerrain
url <- 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}'
# Esri.WorldShadedRelief
# url <- 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}'
# Esri.WorldPhysical
# url <- "https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}"
r <- readOGR("../data/natural_earth/ne_10m_rivers_lake_centerlines/ne_10m_rivers_lake_centerlines.shp")
g <- readOGR("/home/kriewald/Downloads/glacial_lake_hkh_2005/data/GlacialLake_5basins_HKH.shp")
# mapview(g)
os <- 10
map <- openmap(g@bbox[c(4,1)]+c(os,-os), g@bbox[c(2,3)]+c(-os,os), typ=url, minNumTiles = 16)
map <- openproj(map, g@proj4string)
os <- 5
cc <- readRDS("paper_data_17_05_19.RDS")
cc <- cc[cc$lat < g@bbox["y","max"] + os & cc$lat > g@bbox["y","min"] - os &
cc$long < g@bbox["x","max"] + os & cc$long > g@bbox["x","min"] - os, ]
cc$col <- findColours(
classIntervals(
#cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$Name[cc$Name=="DELHIMUNICIPALCORPORATION(U)"] <- "Delhi"
# cairo_pdf("icimod_10.pdf", width = 6.5, height = 4)
cairo_pdf("icimod_50.pdf", width = 6.5, height = 4)
plot(map)
plot(g, lwd=2, add=T, border=adjustcolor("steelblue",.1))
plot(r[r$min_zoom>=1,], lwd=1, add=T, col=adjustcolor("steelblue",.5))
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
# i <- which(cc$pop>5e+06)
i <- which(cc$pop50>10e+06)
text(cc$long[i], cc$lat[i], cc$Name[i], pos=4)
# title("2010")
title("2050")
dev.off()
setwd("/home/kriewald/cluster/pua/")
library(classInt)
library(OpenStreetMap)
library(mapview)
library(rgdal)
# Stamen.TerrainBackground
# url <- 'https://stamen-tiles-a.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png'
# Esri.WorldTerrain
url <- 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}'
# Esri.WorldShadedRelief
# url <- 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}'
# Esri.WorldPhysical
# url <- "https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}"
r <- readOGR("../data/natural_earth/ne_10m_rivers_lake_centerlines/ne_10m_rivers_lake_centerlines.shp")
g <- readOGR("/home/kriewald/Downloads/glacial_lake_hkh_2005/data/GlacialLake_5basins_HKH.shp")
# mapview(g)
os <- 10
map <- openmap(g@bbox[c(4,1)]+c(os,-os), g@bbox[c(2,3)]+c(-os,os), typ=url, minNumTiles = 16)
map <- openproj(map, g@proj4string)
os <- 5
cc <- readRDS("paper_data_17_05_19.RDS")
cc <- cc[cc$lat < g@bbox["y","max"] + os & cc$lat > g@bbox["y","min"] - os &
cc$long < g@bbox["x","max"] + os & cc$long > g@bbox["x","min"] - os, ]
cc$col <- findColours(
classIntervals(
cc$cc_M10, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
#cc$cc_M50_8p5_LU_F, 10, style = "fixed", fixedBreaks=c(seq(0,0.9,0.1),Inf)
), RColorBrewer::brewer.pal(11, "RdYlGn")
)
cc$Name[cc$Name=="DELHIMUNICIPALCORPORATION(U)"] <- "Delhi"
cairo_pdf("icimod_10.pdf", width = 6.5, height = 4)
#cairo_pdf("icimod_50.pdf", width = 6.5, height = 4)
plot(map)
plot(g, lwd=2, add=T, border=adjustcolor("steelblue",.1))
plot(r[r$min_zoom>=1,], lwd=1, add=T, col=adjustcolor("steelblue",.5))
points(cc$long, cc$lat, pch=16,
cex=sqrt(cc$pop/1e+06), col=adjustcolor(cc$col,0.5))
i <- which(cc$pop>5e+06)
#i <- which(cc$pop50>10e+06)
text(cc$long[i], cc$lat[i], cc$Name[i], pos=4)
title("2010")
#title("2050")
dev.off()
install.packages(c("abbyyR", "bit", "cartogram", "data.table", "htmlTable", "imager", "mapplots", "openxlsx", "pillar", "pkgmaker", "plotrix", "purrr", "quantreg", "rJava", "rlang", "utf8"))
install.packages(c("marelac", "mvtnorm", "rasterVis", "rgdal", "rgeos", "rJava", "seacarb"))
install.packages("rJava")
library(srtmtools)
library(srtmtools)
setwd("/home/kriewald/cluster/")
r <- raster(nrow=1,ncol=80)
r
raster.to.png(r, "stripe_80_r.png")
r[c(1,51,81)] <- 1
raster.to.png(r, "stripe_80_r.png")
r <- raster(nrow=1,ncol=81)
r[] <- 0
r[c(1,51,81)] <- 1
plot(r)
r <- raster(nrow=200,ncol=81)
r[] <- 0
r[c(1,51,81)] <- 1
r[] <- 0
raster.to.png(r, "stripe_80_r.png",n=2)
raster.to.png(r, "stripe_80_r.png", mypal = c("steelblue","grey"); n=2)
raster.to.png(r, "stripe_80_r.png", mypal = c("steelblue","grey"), n=2)
raster.to.png
raster.to.png(r, "stripe_80_r.png",
mypal = c("steelblue","grey"),
n=2, style = "fixed", fixed = c(0,.5,1),
trans = r[])
classIntervals(r[],n=2)
rgba <- array(dim = c(200, 80, 4))
breite <- 81
breite <- 81
streifen <- c(1,51,81)
cols <- rep("white", breite)
cols[streifen] <- "grey"
rgba <- array(dim = c(200, breite, 4))
rgba
rgba <- array(dim = c(200, breite, 4))
rgba[, , 4] <- 0
rgba[, streifen, 4] <- 1
cols <- rep("white", breite)
cols[streifen] <- "grey"
breite <- 81
streifen <- c(1,51,81)
cols <- rep("white", breite)
cols[streifen] <- "grey"
rgba <- array(dim = c(200, breite, 4))
rgba[, , 4] <- 0
rgba[, streifen, 4] <- 1
rgb.data <- col2rgb(cols)
rgba[, , 1] <- rgb.data[1, ]/255
rgba[, , 2] <- rgb.data[2, ]/255
rgba[, , 3] <- rgb.data[3, ]/255
writePNG(rgba, target = "test.png")
getwd()
setwd("/home/kriewald/cluster/www/js/")
writePNG(rgba, target = "test.png")
breite <- 81
streifen <- c(1,51,81)
cols <- rep("white", breite)
cols[streifen] <- "red"
rgba <- array(dim = c(200, breite, 4))
rgba[, , 4] <- 0
rgba[, streifen, 4] <- 1
rgb.data <- col2rgb(cols)
rgba[, , 1] <- rgb.data[1, ]/255
rgba[, , 2] <- rgb.data[2, ]/255
rgba[, , 3] <- rgb.data[3, ]/255
writePNG(rgba, target = "test.png")
cols <- rep("white", breite)
cols[streifen] <- "red"
rgba <- array(dim = c(200, breite, 4))
rgba[, , 4] <- 1
rgba[, streifen, 4] <- 0
rgb.data <- col2rgb(cols)
rgba[, , 1] <- rgb.data[1, ]/255
rgba[, , 2] <- rgb.data[2, ]/255
rgba[, , 3] <- rgb.data[3, ]/255
writePNG(rgba, target = "test.png")
cols <- array(dim = c(200, breite))
cols <- array(dim = c(200, breite))
cols[] <- "white"
cols[,streifen] <- "red"
breite <- 81
streifen <- c(1,51,81)
cols <- array(dim = c(200, breite))
cols[] <- "white"
cols[,streifen] <- "red"
rgba <- array(dim = c(200, breite, 4))
rgba[, , 4] <- 0
rgba[, streifen, 4] <- 1
rgb.data <- col2rgb(cols)
rgba[, , 1] <- rgb.data[1, ]/255
rgba[, , 2] <- rgb.data[2, ]/255
rgba[, , 3] <- rgb.data[3, ]/255
writePNG(rgba, target = "test.png")
breite <- 81
streifen <- c(1,51,81)
cols <- array(dim = c(200, breite))
cols[] <- "white"
cols[,streifen] <- "grey"
rgba <- array(dim = c(200, breite, 4))
rgba[, , 4] <- 0
rgba[, streifen, 4] <- 1
rgb.data <- col2rgb(cols)
rgba[, , 1] <- rgb.data[1, ]/255
rgba[, , 2] <- rgb.data[2, ]/255
rgba[, , 3] <- rgb.data[3, ]/255
writePNG(rgba, target = "test.png")
breite <- 81
streifen <- c(1,31,81)
cols <- array(dim = c(200, breite))
cols[] <- "white"
cols[,streifen] <- "grey"
rgba <- array(dim = c(200, breite, 4))
rgba[, , 4] <- 0
rgba[, streifen, 4] <- 1
rgb.data <- col2rgb(cols)
rgba[, , 1] <- rgb.data[1, ]/255
rgba[, , 2] <- rgb.data[2, ]/255
rgba[, , 3] <- rgb.data[3, ]/255
writePNG(rgba, target = "test.png")
install.packages(c("ggthemes", "httpuv", "rJava"))
library(png)
setwd("/home/kriewald/cmf_twenty-fifty/twenty-fifty/public/assets/images/fractions/")
tmp <- readPNG("levelgrey_1.png")
tmp
str(tmp)
col2rgb("#E2E2E2")
col2rgb("#E2E2E2")/255
tmp[,,1:3]
tmp[,,1:3] <- 1
tmp
paste0("levlegrey_",1:9)
setwd("/home/kriewald/cmf_twenty-fifty/twenty-fifty/public/assets/images/fractions/")
for(n in 1:9){
tmp <- readPNG(paste0("levelgrey_",n,".png"))
# tmp[,,1:3] <- col2rgb("#b2c1d1")/255
# writePNG(tmp, paste0("levelgrey_",n,".png"))
tmp[,,1:3] <- col2rgb("#7f99b2")/255
writePNG(tmp, paste0("levelgrey_hover_",n,".png"))
}
for(n in 1:9){
tmp <- readPNG(paste0("levelgrey_",n,".png"))
tmp[,,1:3] <- col2rgb("#b2c1d1")/255
writePNG(tmp, paste0("levelgrey_",n,".png"))
# tmp[,,1:3] <- col2rgb("#7f99b2")/255
# writePNG(tmp, paste0("levelgrey_hover_",n,".png"))
}
getwd()
tmp <- readPNG(paste0("levelgrey_",n,".png"))
tmp
n
n=1
tmp <- readPNG(paste0("levelgrey_",n,".png"))
tmp
col2rgb("#b2c1d1")/255
tmp[,,1:3] <- t(col2rgb("#b2c1d1")/255)
tmp
t(col2rgb("#b2c1d1")/255)
tmp[,,1]
tmp[,,1]
ncol(tmp[,,1])
ncols(tmp[,,1])
str(tmp[,,1])
dim(str(tmp[,,1]))
dim(tmp[,,1])
length(tmp[,,1])
tmp <- readPNG(paste0("levelgrey_",n,".png"))
for(c in length(tmp[,,1]){
tmp[,c,1:3] <- col2rgb("#b2c1d1")/255
}
writePNG(tmp, paste0("levelgrey_",n,".png"))
# tmp[,,1:3] <- col2rgb("#7f99b2")/255
# writePNG(tmp, paste0("levelgrey_hover_",n,".png"))
}
tmp <- readPNG(paste0("levelgrey_",n,".png"))
for(c in length(tmp[,,1])){
tmp[,c,1:3] <- col2rgb("#b2c1d1")/255
}
tmp
tmp[,,1:3]
tmp[1,,1:3]
tmp[,1,1:3]
tmp[,2,1:3]
col2rgb("#b2c1d1")/255
tmp <- readPNG(paste0("levelgrey_",n,".png"))
c=1
tmp[,c,1:3]
col2rgb("#b2c1d1")/255
tmp[,c,1:3] <- col2rgb("#b2c1d1")/255
tmp[,c,1:3]
c=2
tmp[,c,1:3]
col2rgb("#b2c1d1")/255
tmp[,c,1:3] <- col2rgb("#b2c1d1")/255
tmp <- readPNG(paste0("levelgrey_",n,".png"))
for(c in length(tmp[,,1])){
tmp[,c,1:3] <- col2rgb("#b2c1d1")/255
}
tmp
tmp <- readPNG(paste0("levelgrey_",n,".png"))
color <- col2rgb("#b2c1d1")/255
for(c in length(tmp[,,1])){
tmp[,c,1:3] <- color
}
writePNG(tmp, paste0("levelgrey_",n,".png"))
n
tmp
tmp[,1,1:3] <- color
tmp[,1,1:3] <- color
tmp[,2,1:3] <- color
color <- 1:3
for(c in length(tmp[,,1])){
tmp[,c,1:3] <- color
}
tmp
tmp[,1,1:3]
tmp[,2,1:3]
tmp[1,,1:3] <- color
tmp[2,,1:3] <- color
tmp <- readPNG(paste0("levelgrey_",n,".png"))
tmp[1,,1:3] <- color
tmp[2,,1:3] <- color
tmp
tmp[,,1:3]
tmp[,,1:3][1,] <- color
tmp[,,1:3][2,] <- color
tmp
tmp <- readPNG(paste0("levelgrey_",n,".png"))
color <- col2rgb("#b2c1d1")/255
for(c in length(tmp[,,1])){
tmp[,,1:3][c,] <- color
}
tmp
tmp[,,1:3][c,]
tmp <- readPNG(paste0("levelgrey_",n,".png"))
tmp
tmp[,,1:3][c,]
tmp[] <- 1:8
tmp
tmp[,,1:3]
tmp[,,1]
tmp[,,2]
color[1]
tmp <- readPNG(paste0("levelgrey_",n,".png"))
color <- col2rgb("#b2c1d1")/255
tmp[,,1] <- color[1]
tmp[,,2] <- color[2]
tmp[,,3] <- color[3]
tmp
writePNG(tmp, paste0("levelgrey_",n,".png"))
n
for(n in 1:9){
tmp <- readPNG(paste0("levelgrey_",n,".png"))
color <- col2rgb("#b2c1d1")/255
tmp[,,1] <- color[1]
tmp[,,2] <- color[2]
tmp[,,3] <- color[3]
writePNG(tmp, paste0("levelgrey_",n,".png"))
# tmp[,,1:3] <- col2rgb("#7f99b2")/255
# writePNG(tmp, paste0("levelgrey_hover_",n,".png"))
}
for(n in 1:9){
tmp <- readPNG(paste0("levelgrey_",n,".png"))
# color <- col2rgb("#b2c1d1")/255
color <- col2rgb("#7f99b2")/255
tmp[,,1] <- color[1]
tmp[,,2] <- color[2]
tmp[,,3] <- color[3]
# writePNG(tmp, paste0("levelgrey_",n,".png"))
writePNG(tmp, paste0("levelgrey_hover_",n,".png"))
}
